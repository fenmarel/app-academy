  [1m[36m (1.4ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" varchar(255) NOT NULL) [0m
  [1m[35m (1.1ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateUsers (20140213181720)
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36m (0.5ms)[0m  [1mCREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_name" varchar(255), "created_at" datetime, "updated_at" datetime) [0m
  [1m[35mSQL (1.5ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES (?)  [["version", "20140213181720"]]
  [1m[36m (0.9ms)[0m  [1mcommit transaction[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreatePolls (20140213181910)
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36m (0.7ms)[0m  [1mCREATE TABLE "polls" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar(255), "user_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35mSQL (2.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES (?)  [["version", "20140213181910"]]
  [1m[36m (5.5ms)[0m  [1mcommit transaction[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateQuestions (20140213182221)
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36m (0.6ms)[0m  [1mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "text" varchar(255), "poll_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35mSQL (1.7ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES (?)  [["version", "20140213182221"]]
  [1m[36m (1.7ms)[0m  [1mcommit transaction[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.2ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateAnswerChoices (20140213182642)
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36m (0.7ms)[0m  [1mCREATE TABLE "answer_choices" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answer" varchar(255), "question_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35mSQL (2.6ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES (?)  [["version", "20140213182642"]]
  [1m[36m (1.6ms)[0m  [1mcommit transaction[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.2ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateResponses (20140213182908)
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36m (0.8ms)[0m  [1mCREATE TABLE "responses" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_id" integer, "answer_choice_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35mSQL (2.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES (?)  [["version", "20140213182908"]]
  [1m[36m (1.6ms)[0m  [1mcommit transaction[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (2.1ms)[0m  [1mCREATE TABLE "answer_choices" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answer" varchar(255), "question_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (3.4ms)[0m  CREATE TABLE "polls" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar(255), "user_id" integer, "created_at" datetime, "updated_at" datetime) 
  [1m[36m (1.2ms)[0m  [1mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "text" varchar(255), "poll_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.2ms)[0m  CREATE TABLE "responses" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_id" integer, "answer_choice_id" integer, "created_at" datetime, "updated_at" datetime) 
  [1m[36m (1.1ms)[0m  [1mCREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_name" varchar(255), "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.3ms)[0m  CREATE TABLE "schema_migrations" ("version" varchar(255) NOT NULL) 
  [1m[36m (1.1ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (0.1ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (1.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213182908')[0m
  [1m[35m (1.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213181720')
  [1m[36m (1.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213181910')[0m
  [1m[35m (1.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213182221')
  [1m[36m (1.1ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213182642')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.2ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to AddTableIndices (20140213183137)
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36m (0.5ms)[0m  [1mCREATE UNIQUE INDEX "index_users_on_user_name" ON "users" ("user_name")[0m
  [1m[35m (0.2ms)[0m  CREATE INDEX "index_poll_on_author" ON "poll" ("author")
SQLite3::SQLException: no such table: main.poll: CREATE  INDEX "index_poll_on_author" ON "poll" ("author")
  [1m[36m (0.5ms)[0m  [1mrollback transaction[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to AddTableIndices (20140213183137)
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36m (0.6ms)[0m  [1mCREATE UNIQUE INDEX "index_users_on_user_name" ON "users" ("user_name")[0m
  [1m[35m (0.2ms)[0m  CREATE INDEX "index_poll_on_user_id" ON "poll" ("user_id")
SQLite3::SQLException: no such table: main.poll: CREATE  INDEX "index_poll_on_user_id" ON "poll" ("user_id")
  [1m[36m (0.5ms)[0m  [1mrollback transaction[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to AddTableIndices (20140213183137)
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36m (0.6ms)[0m  [1mCREATE UNIQUE INDEX "index_users_on_user_name" ON "users" ("user_name")[0m
  [1m[35m (0.2ms)[0m  CREATE INDEX "index_polls_on_user_id" ON "polls" ("user_id")
  [1m[36m (0.2ms)[0m  [1mCREATE INDEX "index_questions_on_poll_id" ON "questions" ("poll_id")[0m
  [1m[35m (0.2ms)[0m  CREATE INDEX "index_answer_choices_on_question_id" ON "answer_choices" ("question_id")
  [1m[36m (0.2ms)[0m  [1mCREATE INDEX "index_responses_on_user_id" ON "responses" ("user_id")[0m
  [1m[35m (0.2ms)[0m  CREATE INDEX "index_responses_on_anwser_choice_id" ON "responses" ("anwser_choice_id")
SQLite3::SQLException: table responses has no column named anwser_choice_id: CREATE  INDEX "index_responses_on_anwser_choice_id" ON "responses" ("anwser_choice_id")
  [1m[36m (0.6ms)[0m  [1mrollback transaction[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to AddTableIndices (20140213183137)
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36m (0.6ms)[0m  [1mCREATE UNIQUE INDEX "index_users_on_user_name" ON "users" ("user_name")[0m
  [1m[35m (0.2ms)[0m  CREATE INDEX "index_polls_on_user_id" ON "polls" ("user_id")
  [1m[36m (0.2ms)[0m  [1mCREATE INDEX "index_questions_on_poll_id" ON "questions" ("poll_id")[0m
  [1m[35m (0.2ms)[0m  CREATE INDEX "index_answer_choices_on_question_id" ON "answer_choices" ("question_id")
  [1m[36m (0.2ms)[0m  [1mCREATE INDEX "index_responses_on_user_id" ON "responses" ("user_id")[0m
  [1m[35m (0.2ms)[0m  CREATE INDEX "index_responses_on_answer_choice_id" ON "responses" ("answer_choice_id")
  [1m[36mSQL (1.8ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20140213183137"]]
  [1m[35m (1.7ms)[0m  commit transaction
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'foo' LIMIT 1[0m
  [1m[35mSQL (18.1ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 19:08:27 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 19:08:27 UTC +00:00], ["user_name", "foo"]]
  [1m[36m (2.1ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (1.1ms)[0m  [1mINSERT INTO "polls" ("created_at", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?)[0m  [["created_at", Thu, 13 Feb 2014 19:08:27 UTC +00:00], ["title", "Some Poll"], ["updated_at", Thu, 13 Feb 2014 19:08:27 UTC +00:00], ["user_id", 1]]
  [1m[35m (1.1ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (0.9ms)[0m  INSERT INTO "questions" ("created_at", "poll_id", "text", "updated_at") VALUES (?, ?, ?, ?)  [["created_at", Thu, 13 Feb 2014 19:08:27 UTC +00:00], ["poll_id", 1], ["text", "Who, what where?"], ["updated_at", Thu, 13 Feb 2014 19:08:27 UTC +00:00]]
  [1m[36m (1.0ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (1.1ms)[0m  [1mINSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answer", "Because"], ["created_at", Thu, 13 Feb 2014 19:08:27 UTC +00:00], ["question_id", 1], ["updated_at", Thu, 13 Feb 2014 19:08:27 UTC +00:00]]
  [1m[35m (0.8ms)[0m  commit transaction
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'foo' LIMIT 1[0m
  [1m[35m (0.1ms)[0m  rollback transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35m (0.1ms)[0m  rollback transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35m (0.1ms)[0m  rollback transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35m (0.1ms)[0m  rollback transaction
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'foo' LIMIT 1[0m
  [1m[35m (0.1ms)[0m  rollback transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35m (0.1ms)[0m  rollback transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35m (0.1ms)[0m  rollback transaction
  [1m[36m (0.2ms)[0m  [1mbegin transaction[0m
  [1m[35m (0.1ms)[0m  rollback transaction
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'foo' LIMIT 1[0m
  [1m[35m (0.1ms)[0m  rollback transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35m (0.1ms)[0m  rollback transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35m (0.1ms)[0m  rollback transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35m (0.1ms)[0m  rollback transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mResponse Load (0.2ms)[0m  SELECT "responses".* FROM "responses" WHERE "responses"."user_id" IS NULL AND "responses"."answer_choice_id" IS NULL LIMIT 1
  [1m[36m (0.1ms)[0m  [1mrollback transaction[0m
  [1m[36mResponse Load (0.2ms)[0m  [1mSELECT "responses".* FROM "responses" WHERE "responses"."user_id" = 1 AND "responses"."answer_choice_id" = 1 LIMIT 1[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'foo' LIMIT 1[0m
  [1m[35m (0.1ms)[0m  rollback transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35m (0.1ms)[0m  rollback transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35m (0.1ms)[0m  rollback transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35m (0.1ms)[0m  rollback transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mResponse Load (0.2ms)[0m  SELECT "responses".* FROM "responses" WHERE "responses"."user_id" IS NULL AND "responses"."answer_choice_id" IS NULL LIMIT 1
  [1m[36m (0.1ms)[0m  [1mrollback transaction[0m
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mResponse Load (4.1ms)[0m  [1mSELECT "responses".* FROM "responses" WHERE "responses"."user_id" = ?[0m  [["user_id", 1]]
  [1m[35mResponse Load (0.2ms)[0m  SELECT "responses".* FROM "responses"
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'foo' LIMIT 1[0m
  [1m[35m (0.1ms)[0m  rollback transaction
  [1m[36m (2.1ms)[0m  [1mCREATE TABLE "answer_choices" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answer" varchar(255), "question_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (4.3ms)[0m  CREATE INDEX "index_answer_choices_on_question_id" ON "answer_choices" ("question_id")
  [1m[36m (1.4ms)[0m  [1mCREATE TABLE "polls" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar(255), "user_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.1ms)[0m  CREATE INDEX "index_polls_on_user_id" ON "polls" ("user_id")
  [1m[36m (1.1ms)[0m  [1mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "text" varchar(255), "poll_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.1ms)[0m  CREATE INDEX "index_questions_on_poll_id" ON "questions" ("poll_id")
  [1m[36m (1.0ms)[0m  [1mCREATE TABLE "responses" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_id" integer, "answer_choice_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.6ms)[0m  CREATE INDEX "index_responses_on_answer_choice_id" ON "responses" ("answer_choice_id")
  [1m[36m (1.1ms)[0m  [1mCREATE INDEX "index_responses_on_user_id" ON "responses" ("user_id")[0m
  [1m[35m (1.1ms)[0m  CREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_name" varchar(255), "created_at" datetime, "updated_at" datetime) 
  [1m[36m (1.1ms)[0m  [1mCREATE UNIQUE INDEX "index_users_on_user_name" ON "users" ("user_name")[0m
  [1m[35m (1.5ms)[0m  CREATE TABLE "schema_migrations" ("version" varchar(255) NOT NULL) 
  [1m[36m (1.2ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (0.2ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (1.3ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213183137')[0m
  [1m[35m (1.3ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213181720')
  [1m[36m (1.2ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213181910')[0m
  [1m[35m (1.1ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213182221')
  [1m[36m (1.1ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213182642')[0m
  [1m[35m (1.2ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213182908')
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'foo' LIMIT 1[0m
  [1m[35mSQL (4.8ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 19:14:05 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 19:14:05 UTC +00:00], ["user_name", "foo"]]
  [1m[36m (1.5ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "polls" ("created_at", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?)[0m  [["created_at", Thu, 13 Feb 2014 19:14:05 UTC +00:00], ["title", "Some Poll"], ["updated_at", Thu, 13 Feb 2014 19:14:05 UTC +00:00], ["user_id", 1]]
  [1m[35m (1.3ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "questions" ("created_at", "poll_id", "text", "updated_at") VALUES (?, ?, ?, ?)  [["created_at", Thu, 13 Feb 2014 19:14:05 UTC +00:00], ["poll_id", 1], ["text", "Who, what where?"], ["updated_at", Thu, 13 Feb 2014 19:14:05 UTC +00:00]]
  [1m[36m (1.1ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answer", "Because"], ["created_at", Thu, 13 Feb 2014 19:14:05 UTC +00:00], ["question_id", 1], ["updated_at", Thu, 13 Feb 2014 19:14:05 UTC +00:00]]
  [1m[35m (1.0ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mResponse Load (0.1ms)[0m  SELECT "responses".* FROM "responses" WHERE "responses"."user_id" = 1 AND "responses"."answer_choice_id" = 1 LIMIT 1
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES (?, ?, ?, ?)[0m  [["answer_choice_id", 1], ["created_at", Thu, 13 Feb 2014 19:14:05 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 19:14:05 UTC +00:00], ["user_id", 1]]
  [1m[35m (1.2ms)[0m  commit transaction
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'foo' LIMIT 1[0m
  [1m[35m (0.1ms)[0m  rollback transaction
  [1m[36mResponse Load (2.1ms)[0m  [1mSELECT "responses".* FROM "responses"[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mResponse Load (0.2ms)[0m  [1mSELECT "responses".* FROM "responses" WHERE "responses"."user_id" = 1 AND "responses"."answer_choice_id" = 1 LIMIT 1[0m
  [1m[35mSQL (4.0ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES (?, ?, ?, ?)  [["answer_choice_id", 1], ["created_at", Thu, 13 Feb 2014 19:15:15 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 19:15:15 UTC +00:00], ["user_id", 1]]
  [1m[36m (1.0ms)[0m  [1mcommit transaction[0m
  [1m[35mResponse Load (0.2ms)[0m  SELECT "responses".* FROM "responses"
  [1m[36mResponse Load (0.2ms)[0m  [1mSELECT "responses".* FROM "responses" WHERE "responses"."user_id" = 1 AND "responses"."answer_choice_id" = 1 LIMIT 1[0m
  [1m[35mResponse Load (0.3ms)[0m  SELECT "responses".* FROM "responses" WHERE "responses"."user_id" = 1 AND "responses"."answer_choice_id" = 1 LIMIT 1
  [1m[36mResponse Load (0.4ms)[0m  [1mSELECT "responses".* FROM "responses" ORDER BY "responses"."id" DESC LIMIT 1[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.6ms)[0m  [1mDELETE FROM "responses" WHERE "responses"."id" = ?[0m  [["id", 2]]
  [1m[35m (1.6ms)[0m  commit transaction
  [1m[36mResponse Load (0.3ms)[0m  [1mSELECT "responses".* FROM "responses"[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mResponse Load (0.2ms)[0m  [1mSELECT "responses".* FROM "responses" WHERE "responses"."user_id" = 1 AND "responses"."answer_choice_id" = 1 LIMIT 1[0m
  [1m[35m (0.1ms)[0m  rollback transaction
  [1m[36mResponse Load (0.2ms)[0m  [1mSELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1[0m
  [1m[35mResponse Load (0.2ms)[0m   SELECT question_id
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choice.id
 WHERE
 user_id = 1 AND answer_choice_id = 1


SQLite3::SQLException: no such column: answer_choice.id:     SELECT question_id
    FROM
    responses JOIN answer_choices
    ON responses.answer_choice_id = answer_choice.id
    WHERE
    user_id = 1 AND answer_choice_id = 1


  [1m[36mResponse Load (0.1ms)[0m  [1mSELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1[0m
  [1m[35mResponse Load (0.2ms)[0m   SELECT question_id
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 user_id = 1 AND answer_choice_id = 1


  [1m[36mQuestion Load (0.2ms)[0m  [1mSELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mResponse Load (0.3ms)[0m  SELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1
  [1m[36mResponse Load (0.1ms)[0m  [1m SELECT question_id
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 user_id = 1 AND answer_choice_id = 1

[0m
  [1m[35mResponse Load (0.1ms)[0m  SELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1
  [1m[36mResponse Load (0.2ms)[0m  [1m SELECT question_id As question_thing
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 user_id = 1 AND answer_choice_id = 1

[0m
  [1m[35mResponse Load (0.1ms)[0m  SELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1
  [1m[36mQuestion Load (0.2ms)[0m  [1m SELECT question_id
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 user_id = 1 AND answer_choice_id = 1

[0m
  [1m[35mResponse Load (0.2ms)[0m  SELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1
  [1m[36mAnswerChoice Load (0.3ms)[0m  [1m SELECT question_id
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 user_id = 1 AND answer_choice_id = 1

[0m
  [1m[35mResponse Load (0.1ms)[0m  SELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1
  [1m[36mAnswerChoice Load (0.2ms)[0m  [1m SELECT question_id
 FROM
 answer_choices
 WHERE
 answer_choice_id = 1

[0m
SQLite3::SQLException: no such column: answer_choice_id:     SELECT question_id
    FROM
    answer_choices
    WHERE
    answer_choice_id = 1


  [1m[35mResponse Load (0.2ms)[0m  SELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1
  [1m[36mAnswerChoice Load (0.3ms)[0m  [1m SELECT question_id
 FROM
 answer_choices
 WHERE
 id = 1

[0m
  [1m[35mResponse Load (0.1ms)[0m  SELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1
  [1m[36mResponse Load (0.2ms)[0m  [1m SELECT
 response.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1 AND
 responses.question_id =
 (SELECT question_id
 FROM
 answer_choices
 WHERE
 id = 1)

[0m
SQLite3::SQLException: no such table: response:     SELECT
    response.*
    FROM
    responses JOIN answer_choices
    ON responses.answer_choice_id = answer_choices.id
    WHERE
    responses.user_id = 1 AND
    responses.question_id =
      (SELECT question_id
      FROM
      answer_choices
      WHERE
      id = 1)


  [1m[35mResponse Load (0.2ms)[0m  SELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1
  [1m[36mResponse Load (0.3ms)[0m  [1m SELECT
 response.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1 AND
 responses.question_id IN
 (SELECT question_id
 FROM
 answer_choices
 WHERE
 id = 1)

[0m
SQLite3::SQLException: no such table: response:     SELECT
    response.*
    FROM
    responses JOIN answer_choices
    ON responses.answer_choice_id = answer_choices.id
    WHERE
    responses.user_id = 1 AND
    responses.question_id IN
      (SELECT question_id
      FROM
      answer_choices
      WHERE
      id = 1)


  [1m[35mResponse Load (0.1ms)[0m  SELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1
  [1m[36mResponse Load (0.2ms)[0m  [1m SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1 AND
 responses.question_id IN
 (SELECT question_id
 FROM
 answer_choices
 WHERE
 id = 1)

[0m
SQLite3::SQLException: no such column: responses.question_id:     SELECT
    responses.*
    FROM
    responses JOIN answer_choices
    ON responses.answer_choice_id = answer_choices.id
    WHERE
    responses.user_id = 1 AND
    responses.question_id IN
      (SELECT question_id
      FROM
      answer_choices
      WHERE
      id = 1)


  [1m[35mResponse Load (0.1ms)[0m  SELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1
  [1m[36mResponse Load (0.4ms)[0m  [1m SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1 AND
 answer_choices.question_id IN
 (SELECT question_id
 FROM
 answer_choices
 WHERE
 id = 1)

[0m
  [1m[35mResponse Load (0.1ms)[0m  SELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1
  [1m[36mResponse Load (0.3ms)[0m  [1m SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1 AND
 answer_choices.question_id IN
 (SELECT question_id
 FROM
 answer_choices
 WHERE
 id = 1)

[0m
  [1m[35mResponse Load (0.2ms)[0m   SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1 AND
 answer_choices.question_id IN
 (SELECT question_id
 FROM
 answer_choices
 WHERE
 id = 1)


  [1m[36mResponse Load (0.3ms)[0m  [1m SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1 AND
 answer_choices.question_id IN
 (SELECT question_id
 FROM
 answer_choices
 WHERE
 id = 1)

[0m
  [1m[35mResponse Load (0.3ms)[0m   SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1 AND
 answer_choices.question_id IN
 (SELECT question_id
 FROM
 answer_choices
 WHERE
 id = 1)


  [1m[36mResponse Load (0.4ms)[0m  [1m SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1 AND
 answer_choices.question_id IN
 (SELECT question_id
 FROM
 answer_choices
 WHERE
 id = 1)

[0m
  [1m[35mResponse Load (0.2ms)[0m  SELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1
  [1m[36mResponse Load (0.5ms)[0m  [1m SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1 AND
 answer_choices.question_id IN
 (SELECT question_id
 FROM
 answer_choices
 WHERE
 id = 1)

[0m
  [1m[36m (5.9ms)[0m  [1mCREATE TABLE "answer_choices" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answer" varchar(255), "question_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.3ms)[0m  CREATE INDEX "index_answer_choices_on_question_id" ON "answer_choices" ("question_id")
  [1m[36m (1.3ms)[0m  [1mCREATE TABLE "polls" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar(255), "user_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.1ms)[0m  CREATE INDEX "index_polls_on_user_id" ON "polls" ("user_id")
  [1m[36m (1.1ms)[0m  [1mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "text" varchar(255), "poll_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.0ms)[0m  CREATE INDEX "index_questions_on_poll_id" ON "questions" ("poll_id")
  [1m[36m (1.1ms)[0m  [1mCREATE TABLE "responses" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_id" integer, "answer_choice_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.6ms)[0m  CREATE INDEX "index_responses_on_answer_choice_id" ON "responses" ("answer_choice_id")
  [1m[36m (1.3ms)[0m  [1mCREATE INDEX "index_responses_on_user_id" ON "responses" ("user_id")[0m
  [1m[35m (1.2ms)[0m  CREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_name" varchar(255), "created_at" datetime, "updated_at" datetime) 
  [1m[36m (1.2ms)[0m  [1mCREATE UNIQUE INDEX "index_users_on_user_name" ON "users" ("user_name")[0m
  [1m[35m (1.6ms)[0m  CREATE TABLE "schema_migrations" ("version" varchar(255) NOT NULL) 
  [1m[36m (1.2ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (0.2ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (1.1ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213183137')[0m
  [1m[35m (0.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213181720')
  [1m[36m (0.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213181910')[0m
  [1m[35m (1.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213182221')
  [1m[36m (0.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213182642')[0m
  [1m[35m (0.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213182908')
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'foo' LIMIT 1[0m
  [1m[35mSQL (37.3ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 20:01:21 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 20:01:21 UTC +00:00], ["user_name", "foo"]]
  [1m[36m (1.3ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "polls" ("created_at", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?)[0m  [["created_at", Thu, 13 Feb 2014 20:01:22 UTC +00:00], ["title", "Some Poll"], ["updated_at", Thu, 13 Feb 2014 20:01:22 UTC +00:00], ["user_id", 1]]
  [1m[35m (1.7ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "questions" ("created_at", "poll_id", "text", "updated_at") VALUES (?, ?, ?, ?)  [["created_at", Thu, 13 Feb 2014 20:01:22 UTC +00:00], ["poll_id", 1], ["text", "Who, what where?"], ["updated_at", Thu, 13 Feb 2014 20:01:22 UTC +00:00]]
  [1m[36m (1.2ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answer", "Because"], ["created_at", Thu, 13 Feb 2014 20:01:22 UTC +00:00], ["question_id", 1], ["updated_at", Thu, 13 Feb 2014 20:01:22 UTC +00:00]]
  [1m[35m (1.4ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mResponse Load (0.3ms)[0m   SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 1)

  [1m[36m (0.1ms)[0m  [1mrollback transaction[0m
  [1m[36mUser Load (2.6ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[36m (1.4ms)[0m  [1mCREATE TABLE "answer_choices" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answer" varchar(255), "question_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (15.7ms)[0m  CREATE INDEX "index_answer_choices_on_question_id" ON "answer_choices" ("question_id")
  [1m[36m (1.3ms)[0m  [1mCREATE TABLE "polls" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar(255), "user_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.3ms)[0m  CREATE INDEX "index_polls_on_user_id" ON "polls" ("user_id")
  [1m[36m (4.0ms)[0m  [1mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "text" varchar(255), "poll_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.3ms)[0m  CREATE INDEX "index_questions_on_poll_id" ON "questions" ("poll_id")
  [1m[36m (1.1ms)[0m  [1mCREATE TABLE "responses" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_id" integer, "answer_choice_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.5ms)[0m  CREATE INDEX "index_responses_on_answer_choice_id" ON "responses" ("answer_choice_id")
  [1m[36m (1.2ms)[0m  [1mCREATE INDEX "index_responses_on_user_id" ON "responses" ("user_id")[0m
  [1m[35m (1.5ms)[0m  CREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_name" varchar(255), "created_at" datetime, "updated_at" datetime) 
  [1m[36m (1.4ms)[0m  [1mCREATE UNIQUE INDEX "index_users_on_user_name" ON "users" ("user_name")[0m
  [1m[35m (1.2ms)[0m  CREATE TABLE "schema_migrations" ("version" varchar(255) NOT NULL) 
  [1m[36m (1.1ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (0.1ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (1.2ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213183137')[0m
  [1m[35m (1.2ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213181720')
  [1m[36m (1.1ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213181910')[0m
  [1m[35m (1.1ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213182221')
  [1m[36m (1.1ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213182642')[0m
  [1m[35m (1.1ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213182908')
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'foo' LIMIT 1[0m
  [1m[35mSQL (5.5ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 20:03:42 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 20:03:42 UTC +00:00], ["user_name", "foo"]]
  [1m[36m (1.5ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "polls" ("created_at", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?)[0m  [["created_at", Thu, 13 Feb 2014 20:03:42 UTC +00:00], ["title", "Some Poll"], ["updated_at", Thu, 13 Feb 2014 20:03:42 UTC +00:00], ["user_id", 1]]
  [1m[35m (1.4ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "poll_id", "text", "updated_at") VALUES (?, ?, ?, ?)  [["created_at", Thu, 13 Feb 2014 20:03:42 UTC +00:00], ["poll_id", 1], ["text", "Who, what where?"], ["updated_at", Thu, 13 Feb 2014 20:03:42 UTC +00:00]]
  [1m[36m (1.0ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answer", "Because"], ["created_at", Thu, 13 Feb 2014 20:03:42 UTC +00:00], ["question_id", 1], ["updated_at", Thu, 13 Feb 2014 20:03:42 UTC +00:00]]
  [1m[35m (0.9ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mResponse Load (0.2ms)[0m   SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 1)

  [1m[36m (0.1ms)[0m  [1mrollback transaction[0m
  [1m[36m (2.2ms)[0m  [1mCREATE TABLE "answer_choices" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answer" varchar(255), "question_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (3.7ms)[0m  CREATE INDEX "index_answer_choices_on_question_id" ON "answer_choices" ("question_id")
  [1m[36m (1.2ms)[0m  [1mCREATE TABLE "polls" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar(255), "user_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.1ms)[0m  CREATE INDEX "index_polls_on_user_id" ON "polls" ("user_id")
  [1m[36m (1.2ms)[0m  [1mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "text" varchar(255), "poll_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.0ms)[0m  CREATE INDEX "index_questions_on_poll_id" ON "questions" ("poll_id")
  [1m[36m (1.1ms)[0m  [1mCREATE TABLE "responses" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_id" integer, "answer_choice_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.1ms)[0m  CREATE INDEX "index_responses_on_answer_choice_id" ON "responses" ("answer_choice_id")
  [1m[36m (1.1ms)[0m  [1mCREATE INDEX "index_responses_on_user_id" ON "responses" ("user_id")[0m
  [1m[35m (1.2ms)[0m  CREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_name" varchar(255), "created_at" datetime, "updated_at" datetime) 
  [1m[36m (1.1ms)[0m  [1mCREATE UNIQUE INDEX "index_users_on_user_name" ON "users" ("user_name")[0m
  [1m[35m (1.2ms)[0m  CREATE TABLE "schema_migrations" ("version" varchar(255) NOT NULL) 
  [1m[36m (1.2ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (0.1ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (1.1ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213183137')[0m
  [1m[35m (1.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213181720')
  [1m[36m (1.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213181910')[0m
  [1m[35m (1.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213182221')
  [1m[36m (1.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213182642')[0m
  [1m[35m (1.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213182908')
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'foo' LIMIT 1[0m
  [1m[35mSQL (10.5ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 20:04:48 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 20:04:48 UTC +00:00], ["user_name", "foo"]]
  [1m[36m (1.6ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "polls" ("created_at", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?)[0m  [["created_at", Thu, 13 Feb 2014 20:04:48 UTC +00:00], ["title", "Some Poll"], ["updated_at", Thu, 13 Feb 2014 20:04:48 UTC +00:00], ["user_id", 1]]
  [1m[35m (1.0ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "poll_id", "text", "updated_at") VALUES (?, ?, ?, ?)  [["created_at", Thu, 13 Feb 2014 20:04:48 UTC +00:00], ["poll_id", 1], ["text", "Who, what where?"], ["updated_at", Thu, 13 Feb 2014 20:04:48 UTC +00:00]]
  [1m[36m (1.9ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answer", "Because"], ["created_at", Thu, 13 Feb 2014 20:04:48 UTC +00:00], ["question_id", 1], ["updated_at", Thu, 13 Feb 2014 20:04:48 UTC +00:00]]
  [1m[35m (1.4ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mResponse Load (0.3ms)[0m   SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 1)

  [1m[36m (0.1ms)[0m  [1mrollback transaction[0m
  [1m[36m (19.5ms)[0m  [1mCREATE TABLE "answer_choices" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answer" varchar(255), "question_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.5ms)[0m  CREATE INDEX "index_answer_choices_on_question_id" ON "answer_choices" ("question_id")
  [1m[36m (1.2ms)[0m  [1mCREATE TABLE "polls" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar(255), "user_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.5ms)[0m  CREATE INDEX "index_polls_on_user_id" ON "polls" ("user_id")
  [1m[36m (1.3ms)[0m  [1mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "text" varchar(255), "poll_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.5ms)[0m  CREATE INDEX "index_questions_on_poll_id" ON "questions" ("poll_id")
  [1m[36m (1.2ms)[0m  [1mCREATE TABLE "responses" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_id" integer, "answer_choice_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.3ms)[0m  CREATE INDEX "index_responses_on_answer_choice_id" ON "responses" ("answer_choice_id")
  [1m[36m (1.4ms)[0m  [1mCREATE INDEX "index_responses_on_user_id" ON "responses" ("user_id")[0m
  [1m[35m (1.2ms)[0m  CREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_name" varchar(255), "created_at" datetime, "updated_at" datetime) 
  [1m[36m (1.2ms)[0m  [1mCREATE UNIQUE INDEX "index_users_on_user_name" ON "users" ("user_name")[0m
  [1m[35m (1.3ms)[0m  CREATE TABLE "schema_migrations" ("version" varchar(255) NOT NULL) 
  [1m[36m (1.2ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (0.2ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (1.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213183137')[0m
  [1m[35m (1.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213181720')
  [1m[36m (1.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213181910')[0m
  [1m[35m (1.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213182221')
  [1m[36m (2.1ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213182642')[0m
  [1m[35m (1.3ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213182908')
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'foo' LIMIT 1[0m
  [1m[35mSQL (8.8ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 20:05:48 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 20:05:48 UTC +00:00], ["user_name", "foo"]]
  [1m[36m (1.7ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "polls" ("created_at", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?)[0m  [["created_at", Thu, 13 Feb 2014 20:05:48 UTC +00:00], ["title", "Some Poll"], ["updated_at", Thu, 13 Feb 2014 20:05:48 UTC +00:00], ["user_id", 1]]
  [1m[35m (1.1ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "poll_id", "text", "updated_at") VALUES (?, ?, ?, ?)  [["created_at", Thu, 13 Feb 2014 20:05:48 UTC +00:00], ["poll_id", 1], ["text", "Who, what where?"], ["updated_at", Thu, 13 Feb 2014 20:05:48 UTC +00:00]]
  [1m[36m (1.5ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answer", "Because"], ["created_at", Thu, 13 Feb 2014 20:05:48 UTC +00:00], ["question_id", 1], ["updated_at", Thu, 13 Feb 2014 20:05:48 UTC +00:00]]
  [1m[35m (1.0ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mResponse Load (0.2ms)[0m   SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 1)

  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES (?, ?, ?, ?)[0m  [["answer_choice_id", 1], ["created_at", Thu, 13 Feb 2014 20:05:48 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 20:05:48 UTC +00:00], ["user_id", 1]]
  [1m[35m (1.5ms)[0m  commit transaction
  [1m[36m (139.2ms)[0m  [1mCREATE TABLE "answer_choices" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answer" varchar(255), "question_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.7ms)[0m  CREATE INDEX "index_answer_choices_on_question_id" ON "answer_choices" ("question_id")
  [1m[36m (174.9ms)[0m  [1mCREATE TABLE "polls" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar(255), "user_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (155.5ms)[0m  CREATE INDEX "index_polls_on_user_id" ON "polls" ("user_id")
  [1m[36m (1.4ms)[0m  [1mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "text" varchar(255), "poll_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.4ms)[0m  CREATE INDEX "index_questions_on_poll_id" ON "questions" ("poll_id")
  [1m[36m (1.3ms)[0m  [1mCREATE TABLE "responses" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_id" integer, "answer_choice_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.2ms)[0m  CREATE INDEX "index_responses_on_answer_choice_id" ON "responses" ("answer_choice_id")
  [1m[36m (1.2ms)[0m  [1mCREATE INDEX "index_responses_on_user_id" ON "responses" ("user_id")[0m
  [1m[35m (1.3ms)[0m  CREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_name" varchar(255), "created_at" datetime, "updated_at" datetime) 
  [1m[36m (1.7ms)[0m  [1mCREATE UNIQUE INDEX "index_users_on_user_name" ON "users" ("user_name")[0m
  [1m[35m (182.0ms)[0m  CREATE TABLE "schema_migrations" ("version" varchar(255) NOT NULL) 
  [1m[36m (1.5ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (0.2ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (197.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213183137')[0m
  [1m[35m (2.3ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213181720')
  [1m[36m (116.4ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213181910')[0m
  [1m[35m (37.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213182221')
  [1m[36m (2.3ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213182642')[0m
  [1m[35m (163.8ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213182908')
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'foo' LIMIT 1[0m
  [1m[35mSQL (7.7ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 20:06:17 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 20:06:17 UTC +00:00], ["user_name", "foo"]]
  [1m[36m (104.7ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "polls" ("created_at", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?)[0m  [["created_at", Thu, 13 Feb 2014 20:06:17 UTC +00:00], ["title", "Some Poll"], ["updated_at", Thu, 13 Feb 2014 20:06:17 UTC +00:00], ["user_id", 1]]
  [1m[35m (149.4ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "questions" ("created_at", "poll_id", "text", "updated_at") VALUES (?, ?, ?, ?)  [["created_at", Thu, 13 Feb 2014 20:06:18 UTC +00:00], ["poll_id", 1], ["text", "Who, what where?"], ["updated_at", Thu, 13 Feb 2014 20:06:18 UTC +00:00]]
  [1m[36m (194.9ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answer", "Because"], ["created_at", Thu, 13 Feb 2014 20:06:18 UTC +00:00], ["question_id", 1], ["updated_at", Thu, 13 Feb 2014 20:06:18 UTC +00:00]]
  [1m[35m (175.8ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mResponse Load (0.3ms)[0m   SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 1)

  [1m[36mSQL (1.2ms)[0m  [1mINSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES (?, ?, ?, ?)[0m  [["answer_choice_id", 1], ["created_at", Thu, 13 Feb 2014 20:06:18 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 20:06:18 UTC +00:00], ["user_id", 1]]
  [1m[35m (161.2ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mUser Exists (0.2ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'bar' LIMIT 1
  [1m[36mSQL (1.0ms)[0m  [1mINSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)[0m  [["created_at", Thu, 13 Feb 2014 20:06:18 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 20:06:18 UTC +00:00], ["user_name", "bar"]]
  [1m[35m (1.8ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)  [["answer", "Why not?"], ["created_at", Thu, 13 Feb 2014 20:06:18 UTC +00:00], ["question_id", 1], ["updated_at", Thu, 13 Feb 2014 20:06:18 UTC +00:00]]
  [1m[36m (169.6ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mResponse Load (0.3ms)[0m  [1m SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 2 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 2)
[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES (?, ?, ?, ?)  [["answer_choice_id", 2], ["created_at", Thu, 13 Feb 2014 20:06:18 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 20:06:18 UTC +00:00], ["user_id", 2]]
  [1m[36m (152.8ms)[0m  [1mcommit transaction[0m
  [1m[36m (1.6ms)[0m  [1mCREATE TABLE "answer_choices" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answer" varchar(255), "question_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.1ms)[0m  CREATE INDEX "index_answer_choices_on_question_id" ON "answer_choices" ("question_id")
  [1m[36m (1.2ms)[0m  [1mCREATE TABLE "polls" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar(255), "user_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.1ms)[0m  CREATE INDEX "index_polls_on_user_id" ON "polls" ("user_id")
  [1m[36m (1.2ms)[0m  [1mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "text" varchar(255), "poll_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.1ms)[0m  CREATE INDEX "index_questions_on_poll_id" ON "questions" ("poll_id")
  [1m[36m (1.3ms)[0m  [1mCREATE TABLE "responses" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_id" integer, "answer_choice_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.0ms)[0m  CREATE INDEX "index_responses_on_answer_choice_id" ON "responses" ("answer_choice_id")
  [1m[36m (1.0ms)[0m  [1mCREATE INDEX "index_responses_on_user_id" ON "responses" ("user_id")[0m
  [1m[35m (1.3ms)[0m  CREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_name" varchar(255), "created_at" datetime, "updated_at" datetime) 
  [1m[36m (1.2ms)[0m  [1mCREATE UNIQUE INDEX "index_users_on_user_name" ON "users" ("user_name")[0m
  [1m[35m (1.3ms)[0m  CREATE TABLE "schema_migrations" ("version" varchar(255) NOT NULL) 
  [1m[36m (1.2ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (0.2ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (1.1ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213183137')[0m
  [1m[35m (1.1ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213181720')
  [1m[36m (1.1ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213181910')[0m
  [1m[35m (1.2ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213182221')
  [1m[36m (1.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213182642')[0m
  [1m[35m (1.1ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213182908')
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'foo' LIMIT 1[0m
  [1m[35mSQL (8.0ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 20:07:50 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 20:07:50 UTC +00:00], ["user_name", "foo"]]
  [1m[36m (1.5ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'the creator' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 20:07:50 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 20:07:50 UTC +00:00], ["user_name", "the creator"]]
  [1m[36m (1.2ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "polls" ("created_at", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?)[0m  [["created_at", Thu, 13 Feb 2014 20:07:50 UTC +00:00], ["title", "Some Poll"], ["updated_at", Thu, 13 Feb 2014 20:07:50 UTC +00:00], ["user_id", 2]]
  [1m[35m (1.5ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "poll_id", "text", "updated_at") VALUES (?, ?, ?, ?)  [["created_at", Thu, 13 Feb 2014 20:07:50 UTC +00:00], ["poll_id", 1], ["text", "Who, what where?"], ["updated_at", Thu, 13 Feb 2014 20:07:50 UTC +00:00]]
  [1m[36m (1.4ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answer", "Because"], ["created_at", Thu, 13 Feb 2014 20:07:50 UTC +00:00], ["question_id", 1], ["updated_at", Thu, 13 Feb 2014 20:07:50 UTC +00:00]]
  [1m[35m (1.0ms)[0m  commit transaction
  [1m[36m (0.2ms)[0m  [1mbegin transaction[0m
  [1m[35mResponse Load (0.3ms)[0m   SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 1)

  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES (?, ?, ?, ?)[0m  [["answer_choice_id", 1], ["created_at", Thu, 13 Feb 2014 20:07:50 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 20:07:50 UTC +00:00], ["user_id", 1]]
  [1m[35m (1.5ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mUser Exists (0.2ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'bar' LIMIT 1
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)[0m  [["created_at", Thu, 13 Feb 2014 20:07:50 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 20:07:50 UTC +00:00], ["user_name", "bar"]]
  [1m[35m (1.3ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)  [["answer", "Why not?"], ["created_at", Thu, 13 Feb 2014 20:07:50 UTC +00:00], ["question_id", 1], ["updated_at", Thu, 13 Feb 2014 20:07:50 UTC +00:00]]
  [1m[36m (0.9ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mResponse Load (0.3ms)[0m  [1m SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 2)
[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES (?, ?, ?, ?)  [["answer_choice_id", 2], ["created_at", Thu, 13 Feb 2014 20:07:50 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 20:07:50 UTC +00:00], ["user_id", 3]]
  [1m[36m (1.1ms)[0m  [1mcommit transaction[0m
  [1m[36mResponse Load (0.2ms)[0m  [1mSELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1[0m
  [1m[35mResponse Load (0.2ms)[0m  SELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1
  [1m[36mResponse Load (0.1ms)[0m  [1mSELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1[0m
  [1m[35mResponse Load (0.2ms)[0m  SELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1
  [1m[36mResponse Load (0.2ms)[0m  [1mSELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1[0m
  [1m[35mResponse Load (0.3ms)[0m  SELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1
  [1m[36mResponse Load (0.1ms)[0m  [1mSELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1[0m
  [1m[35mResponse Load (0.3ms)[0m  SELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1
  [1m[36mResponse Load (0.2ms)[0m  [1mSELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1[0m
  [1m[35mResponse Load (0.3ms)[0m  SELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1
  [1m[36mResponse Load (0.3ms)[0m  [1mSELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1[0m
  [1m[35mResponse Load (0.3ms)[0m  SELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1
  [1m[36mResponse Load (0.2ms)[0m  [1mSELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1[0m
DEPRECATION WARNING: Relation#all is deprecated. If you want to eager-load a relation, you can call #load (e.g. `Post.where(published: true).load`). If you want to get an array of records from a relation, you can call #to_a (e.g. `Post.where(published: true).to_a`). (called from __pry__ at (pry):17)
  [1m[35mResponse Load (0.2ms)[0m  SELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1
  [1m[36mResponse Load (0.1ms)[0m  [1mSELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1[0m
  [1m[35mResponse Load (0.2ms)[0m  SELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1
  [1m[36mResponse Load (0.2ms)[0m  [1mSELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1[0m
  [1m[35mResponse Load (0.2ms)[0m  SELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1
  [1m[36mResponse Load (0.1ms)[0m  [1mSELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1[0m
  [1m[35mResponse Load (0.2ms)[0m  SELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 1)[0m
  [1m[35mResponse Load (0.2ms)[0m  SELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1
  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 1)[0m
  [1m[35mResponse Load (0.2ms)[0m  SELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1
  [1m[36m (0.6ms)[0m  [1mSELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id"[0m
  [1m[35mResponse Load (0.1ms)[0m  SELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1
  [1m[36m (0.3ms)[0m  [1mSELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 1)[0m
  [1m[35mResponse Load (0.1ms)[0m  SELECT "responses".* FROM "responses" ORDER BY "responses"."id" ASC LIMIT 1
  [1m[36m (0.2ms)[0m  [1mSELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 1)[0m
  [1m[35mResponse Load (0.3ms)[0m   SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 2 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 1)

  [1m[36m (0.1ms)[0m  [1mSELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 1)[0m
  [1m[35mResponse Load (0.4ms)[0m   SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 1)

  [1m[36m (0.2ms)[0m  [1mSELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 1)[0m
  [1m[36mResponse Load (0.4ms)[0m  [1m SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 2 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 1)
[0m
  [1m[35m (0.2ms)[0m  SELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 1)
  [1m[36mResponse Load (0.3ms)[0m  [1m SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 2 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 1)
[0m
  [1m[35m (0.2ms)[0m  SELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 1)
  [1m[36mResponse Load (0.5ms)[0m  [1m SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 1)
[0m
  [1m[35m (0.3ms)[0m  SELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 1)
  [1m[36mResponse Load (0.5ms)[0m  [1m SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 1)
[0m
  [1m[35m (0.3ms)[0m  SELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 1)
  [1m[36mResponse Load (0.4ms)[0m  [1m SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 1)
[0m
  [1m[35m (0.3ms)[0m  SELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 1)
  [1m[36mResponse Load (0.4ms)[0m  [1m SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 1)
[0m
  [1m[35m (0.2ms)[0m  SELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 1)
  [1m[36m (39.1ms)[0m  [1mCREATE TABLE "answer_choices" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answer" varchar(255), "question_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (18.5ms)[0m  CREATE INDEX "index_answer_choices_on_question_id" ON "answer_choices" ("question_id")
  [1m[36m (42.5ms)[0m  [1mCREATE TABLE "polls" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar(255), "user_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (72.4ms)[0m  CREATE INDEX "index_polls_on_user_id" ON "polls" ("user_id")
  [1m[36m (39.3ms)[0m  [1mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "text" varchar(255), "poll_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (25.1ms)[0m  CREATE INDEX "index_questions_on_poll_id" ON "questions" ("poll_id")
  [1m[36m (17.4ms)[0m  [1mCREATE TABLE "responses" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_id" integer, "answer_choice_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (8.5ms)[0m  CREATE INDEX "index_responses_on_answer_choice_id" ON "responses" ("answer_choice_id")
  [1m[36m (60.3ms)[0m  [1mCREATE INDEX "index_responses_on_user_id" ON "responses" ("user_id")[0m
  [1m[35m (27.3ms)[0m  CREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_name" varchar(255), "created_at" datetime, "updated_at" datetime) 
  [1m[36m (24.6ms)[0m  [1mCREATE UNIQUE INDEX "index_users_on_user_name" ON "users" ("user_name")[0m
  [1m[35m (25.9ms)[0m  CREATE TABLE "schema_migrations" ("version" varchar(255) NOT NULL) 
  [1m[36m (31.0ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (0.2ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (25.8ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213183137')[0m
  [1m[35m (37.3ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213181720')
  [1m[36m (26.8ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213181910')[0m
  [1m[35m (29.8ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213182221')
  [1m[36m (19.1ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213182642')[0m
  [1m[35m (34.2ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213182908')
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'foo' LIMIT 1[0m
  [1m[35mSQL (91.9ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 22:09:48 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 22:09:48 UTC +00:00], ["user_name", "foo"]]
  [1m[36m (31.2ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'the creator' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 22:09:48 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 22:09:48 UTC +00:00], ["user_name", "the creator"]]
  [1m[36m (20.8ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "polls" ("created_at", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?)[0m  [["created_at", Thu, 13 Feb 2014 22:09:48 UTC +00:00], ["title", "Some Poll"], ["updated_at", Thu, 13 Feb 2014 22:09:48 UTC +00:00], ["user_id", 2]]
  [1m[35m (11.7ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "poll_id", "text", "updated_at") VALUES (?, ?, ?, ?)  [["created_at", Thu, 13 Feb 2014 22:09:48 UTC +00:00], ["poll_id", 1], ["text", "Who, what where?"], ["updated_at", Thu, 13 Feb 2014 22:09:48 UTC +00:00]]
  [1m[36m (7.0ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answer", "Because"], ["created_at", Thu, 13 Feb 2014 22:09:48 UTC +00:00], ["question_id", 1], ["updated_at", Thu, 13 Feb 2014 22:09:48 UTC +00:00]]
  [1m[35m (7.3ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mResponse Load (0.2ms)[0m   SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 1)

  [1m[36m (0.2ms)[0m  [1mSELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 1)[0m
  [1m[35mSQL (1.1ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES (?, ?, ?, ?)  [["answer_choice_id", 1], ["created_at", Thu, 13 Feb 2014 22:09:53 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 22:09:53 UTC +00:00], ["user_id", 1]]
  [1m[36m (5.8ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'bar' LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 22:09:53 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 22:09:53 UTC +00:00], ["user_name", "bar"]]
  [1m[36m (1.4ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answer", "Why not?"], ["created_at", Thu, 13 Feb 2014 22:09:53 UTC +00:00], ["question_id", 1], ["updated_at", Thu, 13 Feb 2014 22:09:53 UTC +00:00]]
  [1m[35m (1.1ms)[0m  commit transaction
  [1m[36mResponse Load (12.7ms)[0m  [1m SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 2)
[0m
  [1m[35m (1.0ms)[0m  SELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 2)
  [1m[36mResponse Load (0.3ms)[0m  [1m SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 2 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 2)
[0m
  [1m[35m (0.2ms)[0m  SELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 2)
  [1m[36mResponse Load (0.3ms)[0m  [1m SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 2)
[0m
  [1m[35m (0.3ms)[0m  SELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 2)
  [1m[36mQuestion Load (42.1ms)[0m  [1mSELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mQuestion Load (0.2ms)[0m  SELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1
  [1m[36mQuestion Load (0.2ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  [1m[35mAnswerChoice Load (22.1ms)[0m  SELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" IN (1)
  [1m[36mQuestion Load (8.2ms)[0m  [1mSELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mQuestion Load (0.3ms)[0m  SELECT "questions".* FROM "questions"
  [1m[36mAnswerChoice Load (0.8ms)[0m  [1mSELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" IN (1)[0m
  [1m[35mQuestion Load (41.8ms)[0m  SELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1
  [1m[36mQuestion Load (0.4ms)[0m  [1mSELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mQuestion Load (0.3ms)[0m  SELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1
  [1m[36mAnswerChoice Load (9.0ms)[0m  [1mSELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" = ?[0m  [["question_id", 1]]
  [1m[35mResponse Load (0.7ms)[0m  SELECT "responses".* FROM "responses" WHERE "responses"."answer_choice_id" IN (1, 2)
  [1m[36mQuestion Load (0.3ms)[0m  [1mSELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mAnswerChoice Load (0.3ms)[0m  SELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" = ?  [["question_id", 1]]
  [1m[36mResponse Load (0.3ms)[0m  [1mSELECT "responses".* FROM "responses" WHERE "responses"."answer_choice_id" IN (1, 2)[0m
  [1m[35mQuestion Load (0.2ms)[0m  SELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1
  [1m[36mAnswerChoice Load (0.5ms)[0m  [1mSELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" = ?[0m  [["question_id", 1]]
  [1m[35mResponse Load (0.3ms)[0m  SELECT "responses".* FROM "responses" WHERE "responses"."answer_choice_id" IN (1, 2)
  [1m[36m (0.5ms)[0m  [1mSELECT COUNT(DISTINCT "answer_choices"."id") FROM "answer_choices" LEFT OUTER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = ?[0m  [["question_id", 1]]
  [1m[35m (0.3ms)[0m  SELECT COUNT(DISTINCT "answer_choices"."id") FROM "answer_choices" LEFT OUTER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = ?  [["question_id", 1]]
  [1m[36mQuestion Load (0.2ms)[0m  [1mSELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mAnswerChoice Load (0.3ms)[0m  SELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" = ?  [["question_id", 1]]
  [1m[36mResponse Load (0.4ms)[0m  [1mSELECT "responses".* FROM "responses" WHERE "responses"."answer_choice_id" IN (1, 2)[0m
  [1m[35m (0.4ms)[0m  SELECT COUNT(DISTINCT answer_choice_id) FROM "answer_choices" LEFT OUTER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = ?  [["question_id", 1]]
  [1m[36m (0.2ms)[0m  [1mSELECT COUNT(DISTINCT answer_choice_id) FROM "answer_choices" LEFT OUTER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = ?[0m  [["question_id", 1]]
  [1m[36m (16.0ms)[0m  [1mCREATE TABLE "answer_choices" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answer" varchar(255), "question_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (47.1ms)[0m  CREATE INDEX "index_answer_choices_on_question_id" ON "answer_choices" ("question_id")
  [1m[36m (1.4ms)[0m  [1mCREATE TABLE "polls" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar(255), "user_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (17.5ms)[0m  CREATE INDEX "index_polls_on_user_id" ON "polls" ("user_id")
  [1m[36m (26.5ms)[0m  [1mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "text" varchar(255), "poll_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (44.6ms)[0m  CREATE INDEX "index_questions_on_poll_id" ON "questions" ("poll_id")
  [1m[36m (12.7ms)[0m  [1mCREATE TABLE "responses" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_id" integer, "answer_choice_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.5ms)[0m  CREATE INDEX "index_responses_on_answer_choice_id" ON "responses" ("answer_choice_id")
  [1m[36m (1.3ms)[0m  [1mCREATE INDEX "index_responses_on_user_id" ON "responses" ("user_id")[0m
  [1m[35m (1.7ms)[0m  CREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_name" varchar(255), "created_at" datetime, "updated_at" datetime) 
  [1m[36m (1.8ms)[0m  [1mCREATE UNIQUE INDEX "index_users_on_user_name" ON "users" ("user_name")[0m
  [1m[35m (38.1ms)[0m  CREATE TABLE "schema_migrations" ("version" varchar(255) NOT NULL) 
  [1m[36m (52.4ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (0.2ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (71.1ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213183137')[0m
  [1m[35m (13.6ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213181720')
  [1m[36m (1.4ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213181910')[0m
  [1m[35m (1.8ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213182221')
  [1m[36m (1.3ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213182642')[0m
  [1m[35m (24.6ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213182908')
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'foo' LIMIT 1[0m
  [1m[35mSQL (78.2ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 22:23:21 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 22:23:21 UTC +00:00], ["user_name", "foo"]]
  [1m[36m (13.7ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.2ms)[0m  begin transaction
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'the creator' LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 22:23:21 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 22:23:21 UTC +00:00], ["user_name", "the creator"]]
  [1m[36m (1.3ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "polls" ("created_at", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?)[0m  [["created_at", Thu, 13 Feb 2014 22:23:21 UTC +00:00], ["title", "Some Poll"], ["updated_at", Thu, 13 Feb 2014 22:23:21 UTC +00:00], ["user_id", 2]]
  [1m[35m (1.5ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "poll_id", "text", "updated_at") VALUES (?, ?, ?, ?)  [["created_at", Thu, 13 Feb 2014 22:23:21 UTC +00:00], ["poll_id", 1], ["text", "Who, what where?"], ["updated_at", Thu, 13 Feb 2014 22:23:21 UTC +00:00]]
  [1m[36m (8.8ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answer", "Because"], ["created_at", Thu, 13 Feb 2014 22:23:21 UTC +00:00], ["question_id", 1], ["updated_at", Thu, 13 Feb 2014 22:23:21 UTC +00:00]]
  [1m[35m (1.1ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mResponse Load (0.2ms)[0m   SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 1)

  [1m[36m (0.2ms)[0m  [1mSELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 1)[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES (?, ?, ?, ?)  [["answer_choice_id", 1], ["created_at", Thu, 13 Feb 2014 22:23:21 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 22:23:21 UTC +00:00], ["user_id", 1]]
  [1m[36m (2.7ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'bar' LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 22:23:21 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 22:23:21 UTC +00:00], ["user_name", "bar"]]
  [1m[36m (45.3ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (29.4ms)[0m  [1mINSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answer", "Why not?"], ["created_at", Thu, 13 Feb 2014 22:23:21 UTC +00:00], ["question_id", 1], ["updated_at", Thu, 13 Feb 2014 22:23:21 UTC +00:00]]
  [1m[35m (26.2ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mResponse Load (0.2ms)[0m   SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 2)

  [1m[36m (0.2ms)[0m  [1mSELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 2)[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES (?, ?, ?, ?)  [["answer_choice_id", 2], ["created_at", Thu, 13 Feb 2014 22:23:21 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 22:23:21 UTC +00:00], ["user_id", 3]]
  [1m[36m (8.2ms)[0m  [1mcommit transaction[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1mSELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mQuestion Load (0.2ms)[0m  SELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1
  [1m[36mAnswerChoice Load (4.4ms)[0m  [1mSELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" = ?[0m  [["question_id", 1]]
  [1m[35mResponse Load (0.3ms)[0m  SELECT "responses".* FROM "responses" WHERE "responses"."answer_choice_id" IN (1, 2)
  [1m[36m (0.4ms)[0m  [1mSELECT COUNT(DISTINCT answer_choice_id) FROM "answer_choices" LEFT OUTER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = ?[0m  [["question_id", 1]]
  [1m[35m (0.2ms)[0m  SELECT COUNT(DISTINCT answer_choice_id) FROM "answer_choices" LEFT OUTER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "answer_choices"."question_id" = ?  [["question_id", 1]]
  [1m[36mQuestion Load (0.1ms)[0m  [1mSELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mAnswerChoice Load (0.2ms)[0m  SELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" = ?  [["question_id", 1]]
  [1m[36mResponse Load (0.4ms)[0m  [1mSELECT "responses".* FROM "responses" WHERE "responses"."answer_choice_id" IN (1, 2)[0m
  [1m[35m (0.3ms)[0m  SELECT COUNT(answer_choice_id) FROM "answer_choices" WHERE "answer_choices"."question_id" = ?  [["question_id", 1]]
SQLite3::SQLException: no such column: answer_choice_id: SELECT COUNT(answer_choice_id) FROM "answer_choices"  WHERE "answer_choices"."question_id" = ?
  [1m[36mQuestion Load (0.1ms)[0m  [1mSELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mAnswerChoice Load (0.3ms)[0m  SELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" = ?  [["question_id", 1]]
  [1m[36mResponse Load (0.3ms)[0m  [1mSELECT "responses".* FROM "responses" WHERE "responses"."answer_choice_id" IN (1, 2)[0m
  [1m[35m (0.3ms)[0m  SELECT COUNT("answer_choices"."id") FROM "answer_choices" WHERE "answer_choices"."question_id" = ?  [["question_id", 1]]
  [1m[36m (0.1ms)[0m  [1mSELECT COUNT("answer_choices"."id") FROM "answer_choices" WHERE "answer_choices"."question_id" = ?[0m  [["question_id", 1]]
  [1m[35mQuestion Load (0.2ms)[0m  SELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1
  [1m[36mAnswerChoice Load (0.3ms)[0m  [1mSELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" = ?[0m  [["question_id", 1]]
  [1m[35mResponse Load (0.3ms)[0m  SELECT "responses".* FROM "responses" WHERE "responses"."answer_choice_id" IN (1, 2)
  [1m[36mResponse Load (0.3ms)[0m  [1mSELECT "responses".* FROM "responses"[0m
  [1m[36m (14.5ms)[0m  [1mCREATE TABLE "answer_choices" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answer" varchar(255), "question_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.3ms)[0m  CREATE INDEX "index_answer_choices_on_question_id" ON "answer_choices" ("question_id")
  [1m[36m (1.4ms)[0m  [1mCREATE TABLE "polls" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar(255), "user_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.7ms)[0m  CREATE INDEX "index_polls_on_user_id" ON "polls" ("user_id")
  [1m[36m (1.3ms)[0m  [1mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "text" varchar(255), "poll_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.1ms)[0m  CREATE INDEX "index_questions_on_poll_id" ON "questions" ("poll_id")
  [1m[36m (1.1ms)[0m  [1mCREATE TABLE "responses" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_id" integer, "answer_choice_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.2ms)[0m  CREATE INDEX "index_responses_on_answer_choice_id" ON "responses" ("answer_choice_id")
  [1m[36m (1.2ms)[0m  [1mCREATE INDEX "index_responses_on_user_id" ON "responses" ("user_id")[0m
  [1m[35m (1.2ms)[0m  CREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_name" varchar(255), "created_at" datetime, "updated_at" datetime) 
  [1m[36m (1.1ms)[0m  [1mCREATE UNIQUE INDEX "index_users_on_user_name" ON "users" ("user_name")[0m
  [1m[35m (1.3ms)[0m  CREATE TABLE "schema_migrations" ("version" varchar(255) NOT NULL) 
  [1m[36m (1.1ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (0.2ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (1.5ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213183137')[0m
  [1m[35m (1.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213181720')
  [1m[36m (1.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213181910')[0m
  [1m[35m (1.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213182221')
  [1m[36m (0.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213182642')[0m
  [1m[35m (1.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213182908')
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'foo' LIMIT 1[0m
  [1m[35mSQL (44.2ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 22:29:02 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 22:29:02 UTC +00:00], ["user_name", "foo"]]
  [1m[36m (1.3ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'the creator' LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 22:29:02 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 22:29:02 UTC +00:00], ["user_name", "the creator"]]
  [1m[36m (1.3ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "polls" ("created_at", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?)[0m  [["created_at", Thu, 13 Feb 2014 22:29:02 UTC +00:00], ["title", "Some Poll"], ["updated_at", Thu, 13 Feb 2014 22:29:02 UTC +00:00], ["user_id", 2]]
  [1m[35m (1.4ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "poll_id", "text", "updated_at") VALUES (?, ?, ?, ?)  [["created_at", Thu, 13 Feb 2014 22:29:02 UTC +00:00], ["poll_id", 1], ["text", "Who, what where?"], ["updated_at", Thu, 13 Feb 2014 22:29:02 UTC +00:00]]
  [1m[36m (1.6ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (15.6ms)[0m  [1mINSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answer", "Because"], ["created_at", Thu, 13 Feb 2014 22:29:02 UTC +00:00], ["question_id", 1], ["updated_at", Thu, 13 Feb 2014 22:29:02 UTC +00:00]]
  [1m[35m (1.3ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mResponse Load (0.3ms)[0m   SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 1)

  [1m[36m (0.3ms)[0m  [1mSELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 1)[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES (?, ?, ?, ?)  [["answer_choice_id", 1], ["created_at", Thu, 13 Feb 2014 22:29:02 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 22:29:02 UTC +00:00], ["user_id", 1]]
  [1m[36m (1.7ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'bar' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 22:29:02 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 22:29:02 UTC +00:00], ["user_name", "bar"]]
  [1m[36m (1.1ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'baz' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 22:29:02 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 22:29:02 UTC +00:00], ["user_name", "baz"]]
  [1m[36m (1.1ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answer", "Why not?"], ["created_at", Thu, 13 Feb 2014 22:29:02 UTC +00:00], ["question_id", 1], ["updated_at", Thu, 13 Feb 2014 22:29:02 UTC +00:00]]
  [1m[35m (1.5ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mResponse Load (0.2ms)[0m   SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 1)

  [1m[36m (0.1ms)[0m  [1mSELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 1)[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES (?, ?, ?, ?)  [["answer_choice_id", 1], ["created_at", Thu, 13 Feb 2014 22:29:02 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 22:29:02 UTC +00:00], ["user_id", 3]]
  [1m[36m (1.1ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mResponse Load (0.2ms)[0m  [1m SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 4 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 2)
[0m
  [1m[35m (0.1ms)[0m  SELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 2)
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES (?, ?, ?, ?)[0m  [["answer_choice_id", 2], ["created_at", Thu, 13 Feb 2014 22:29:02 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 22:29:02 UTC +00:00], ["user_id", 4]]
  [1m[35m (1.1ms)[0m  commit transaction
  [1m[36mQuestion Load (0.5ms)[0m  [1mSELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mAnswerChoice Load (21.5ms)[0m  SELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" = ?  [["question_id", 1]]
  [1m[36mResponse Load (0.6ms)[0m  [1mSELECT "responses".* FROM "responses" WHERE "responses"."answer_choice_id" IN (1, 2)[0m
  [1m[35mQuestion Load (61.1ms)[0m  SELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1
  [1m[36mAnswerChoice Load (40.2ms)[0m  [1mSELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" = ?[0m  [["question_id", 1]]
  [1m[35mResponse Load (53.1ms)[0m  SELECT "responses".* FROM "responses" WHERE "responses"."answer_choice_id" IN (1, 2)
  [1m[36mQuestion Load (0.1ms)[0m  [1mSELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mAnswerChoice Load (0.2ms)[0m  SELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" = ?  [["question_id", 1]]
  [1m[36mResponse Load (0.2ms)[0m  [1mSELECT "responses".* FROM "responses" WHERE "responses"."answer_choice_id" IN (1, 2)[0m
  [1m[35mQuestion Load (0.1ms)[0m  SELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1
  [1m[36mAnswerChoice Load (0.3ms)[0m  [1mSELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" = ?[0m  [["question_id", 1]]
  [1m[35mResponse Load (0.3ms)[0m  SELECT "responses".* FROM "responses" WHERE "responses"."answer_choice_id" IN (1, 2)
  [1m[36mQuestion Load (0.2ms)[0m  [1mSELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mAnswerChoice Load (0.2ms)[0m  SELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" = ?  [["question_id", 1]]
  [1m[36mQuestion Load (0.1ms)[0m  [1mSELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mQuestion Load (0.2ms)[0m  SELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1
  [1m[36mAnswerChoice Load (0.4ms)[0m  [1mSELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" = ? GROUP BY answer_choice_id[0m  [["question_id", 1]]
SQLite3::SQLException: no such column: answer_choice_id: SELECT "answer_choices".* FROM "answer_choices"  WHERE "answer_choices"."question_id" = ? GROUP BY answer_choice_id
  [1m[35mQuestion Load (0.2ms)[0m  SELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1
  [1m[36mAnswerChoice Load (30.0ms)[0m  [1mSELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" = ?[0m  [["question_id", 1]]
  [1m[35mResponse Load (0.2ms)[0m  SELECT "responses".* FROM "responses" WHERE "responses"."answer_choice_id" IN (1, 2)
  [1m[36mQuestion Load (0.1ms)[0m  [1mSELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mAnswerChoice Load (0.2ms)[0m  SELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" = ?  [["question_id", 1]]
  [1m[36mResponse Load (0.3ms)[0m  [1mSELECT "responses".* FROM "responses" WHERE "responses"."answer_choice_id" IN (1, 2)[0m
  [1m[35m (0.3ms)[0m  SELECT COUNT(*) FROM "responses" WHERE "responses"."answer_choice_id" = ?  [["answer_choice_id", 1]]
  [1m[36m (0.1ms)[0m  [1mSELECT COUNT(*) FROM "responses" WHERE "responses"."answer_choice_id" = ?[0m  [["answer_choice_id", 2]]
  [1m[35mQuestion Load (0.1ms)[0m  SELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1
  [1m[36mAnswerChoice Load (0.3ms)[0m  [1mSELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" = ?[0m  [["question_id", 1]]
  [1m[35mResponse Load (0.3ms)[0m  SELECT "responses".* FROM "responses" WHERE "responses"."answer_choice_id" IN (1, 2)
  [1m[36mQuestion Load (0.1ms)[0m  [1mSELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mAnswerChoice Load (0.3ms)[0m  SELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" = ?  [["question_id", 1]]
  [1m[36mResponse Load (0.3ms)[0m  [1mSELECT "responses".* FROM "responses" WHERE "responses"."answer_choice_id" IN (1, 2)[0m
  [1m[36m (16.4ms)[0m  [1mCREATE TABLE "answer_choices" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answer" varchar(255), "question_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.3ms)[0m  CREATE INDEX "index_answer_choices_on_question_id" ON "answer_choices" ("question_id")
  [1m[36m (1.2ms)[0m  [1mCREATE TABLE "polls" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar(255), "user_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.1ms)[0m  CREATE INDEX "index_polls_on_user_id" ON "polls" ("user_id")
  [1m[36m (65.0ms)[0m  [1mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "text" varchar(255), "poll_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.6ms)[0m  CREATE INDEX "index_questions_on_poll_id" ON "questions" ("poll_id")
  [1m[36m (1.4ms)[0m  [1mCREATE TABLE "responses" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_id" integer, "answer_choice_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.2ms)[0m  CREATE INDEX "index_responses_on_answer_choice_id" ON "responses" ("answer_choice_id")
  [1m[36m (1.5ms)[0m  [1mCREATE INDEX "index_responses_on_user_id" ON "responses" ("user_id")[0m
  [1m[35m (1.2ms)[0m  CREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_name" varchar(255), "created_at" datetime, "updated_at" datetime) 
  [1m[36m (1.8ms)[0m  [1mCREATE UNIQUE INDEX "index_users_on_user_name" ON "users" ("user_name")[0m
  [1m[35m (1.4ms)[0m  CREATE TABLE "schema_migrations" ("version" varchar(255) NOT NULL) 
  [1m[36m (1.3ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (0.1ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (1.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213183137')[0m
  [1m[35m (1.1ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213181720')
  [1m[36m (1.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213181910')[0m
  [1m[35m (1.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213182221')
  [1m[36m (1.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213182642')[0m
  [1m[35m (0.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213182908')
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'foo' LIMIT 1[0m
  [1m[35mSQL (34.5ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 22:42:51 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 22:42:51 UTC +00:00], ["user_name", "foo"]]
  [1m[36m (1.8ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.1ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'the creator' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 22:42:51 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 22:42:51 UTC +00:00], ["user_name", "the creator"]]
  [1m[36m (1.5ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "polls" ("created_at", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?)[0m  [["created_at", Thu, 13 Feb 2014 22:42:51 UTC +00:00], ["title", "Some Poll"], ["updated_at", Thu, 13 Feb 2014 22:42:51 UTC +00:00], ["user_id", 2]]
  [1m[35m (1.3ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "questions" ("created_at", "poll_id", "text", "updated_at") VALUES (?, ?, ?, ?)  [["created_at", Thu, 13 Feb 2014 22:42:51 UTC +00:00], ["poll_id", 1], ["text", "Who, what where?"], ["updated_at", Thu, 13 Feb 2014 22:42:51 UTC +00:00]]
  [1m[36m (2.2ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (49.0ms)[0m  [1mINSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answer", "Because"], ["created_at", Thu, 13 Feb 2014 22:42:51 UTC +00:00], ["question_id", 1], ["updated_at", Thu, 13 Feb 2014 22:42:51 UTC +00:00]]
  [1m[35m (1.5ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mResponse Load (0.2ms)[0m   SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 1)

  [1m[36m (0.2ms)[0m  [1mSELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 1)[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES (?, ?, ?, ?)  [["answer_choice_id", 1], ["created_at", Thu, 13 Feb 2014 22:42:51 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 22:42:51 UTC +00:00], ["user_id", 1]]
  [1m[36m (1.3ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.1ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'bar' LIMIT 1[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 22:42:51 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 22:42:51 UTC +00:00], ["user_name", "bar"]]
  [1m[36m (1.6ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.1ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'baz' LIMIT 1[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 22:42:51 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 22:42:51 UTC +00:00], ["user_name", "baz"]]
  [1m[36m (1.4ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answer", "Why not?"], ["created_at", Thu, 13 Feb 2014 22:42:51 UTC +00:00], ["question_id", 1], ["updated_at", Thu, 13 Feb 2014 22:42:51 UTC +00:00]]
  [1m[35m (1.3ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)  [["answer", "Because lonly"], ["created_at", Thu, 13 Feb 2014 22:42:51 UTC +00:00], ["question_id", 1], ["updated_at", Thu, 13 Feb 2014 22:42:51 UTC +00:00]]
  [1m[36m (1.3ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mResponse Load (0.2ms)[0m  [1m SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 1)
[0m
  [1m[35m (0.1ms)[0m  SELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 1)
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES (?, ?, ?, ?)[0m  [["answer_choice_id", 1], ["created_at", Thu, 13 Feb 2014 22:42:51 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 22:42:51 UTC +00:00], ["user_id", 3]]
  [1m[35m (1.4ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mResponse Load (0.2ms)[0m   SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 4 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 2)

  [1m[36m (0.1ms)[0m  [1mSELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 2)[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES (?, ?, ?, ?)  [["answer_choice_id", 2], ["created_at", Thu, 13 Feb 2014 22:42:51 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 22:42:51 UTC +00:00], ["user_id", 4]]
  [1m[36m (1.3ms)[0m  [1mcommit transaction[0m
  [1m[36mQuestion Load (0.2ms)[0m  [1mSELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mAnswerChoice Load (3.0ms)[0m  SELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" = ?  [["question_id", 1]]
  [1m[36mResponse Load (0.4ms)[0m  [1mSELECT "responses".* FROM "responses" WHERE "responses"."answer_choice_id" IN (1, 2, 3)[0m
  [1m[35mUser Load (0.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
DEPRECATION WARNING: Relation#all is deprecated. If you want to eager-load a relation, you can call #load (e.g. `Post.where(published: true).load`). If you want to get an array of records from a relation, you can call #to_a (e.g. `Post.where(published: true).to_a`). (called from __pry__ at (pry):4)
  [1m[35mUser Load (0.3ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
DEPRECATION WARNING: Relation#all is deprecated. If you want to eager-load a relation, you can call #load (e.g. `Post.where(published: true).load`). If you want to get an array of records from a relation, you can call #to_a (e.g. `Post.where(published: true).to_a`). (called from __pry__ at (pry):5)
  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Load (0.2ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPoll Load (0.3ms)[0m  [1mSELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id"[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.2ms)[0m  SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id"
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.3ms)[0m  SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 1)
  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.2ms)[0m  SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 1) AND (count(responses.user_id) = count(questions.*))
SQLite3::SQLException: near "*": syntax error: SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 1) AND (count(responses.user_id) = count(questions.*))
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Load (0.2ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPoll Load (0.2ms)[0m  [1mSELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 1) AND (count(responses.user_id) < count(questions.*))[0m
SQLite3::SQLException: near "*": syntax error: SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 1) AND (count(responses.user_id) < count(questions.*))
  [1m[35mUser Load (0.2ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
DEPRECATION WARNING: Relation#all is deprecated. If you want to eager-load a relation, you can call #load (e.g. `Post.where(published: true).load`). If you want to get an array of records from a relation, you can call #to_a (e.g. `Post.where(published: true).to_a`). (called from __pry__ at (pry):19)
  [1m[36mPoll Load (0.2ms)[0m  [1mSELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 1) AND (count(responses.user_id) < count(questions.*))[0m
SQLite3::SQLException: near "*": syntax error: SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 1) AND (count(responses.user_id) < count(questions.*))
  [1m[35mUser Load (0.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPoll Load (0.2ms)[0m  [1mSELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 1) AND (count(responses.user_id) < count(questions.id))[0m
SQLite3::SQLException: misuse of aggregate function count(): SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 1) AND (count(responses.user_id) < count(questions.id))
  [1m[35mUser Load (0.2ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
DEPRECATION WARNING: Relation#all is deprecated. If you want to eager-load a relation, you can call #load (e.g. `Post.where(published: true).load`). If you want to get an array of records from a relation, you can call #to_a (e.g. `Post.where(published: true).to_a`). (called from __pry__ at (pry):22)
  [1m[36mPoll Load (0.2ms)[0m  [1mSELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 1) AND (count(responses.user_id) < count(questions.id))[0m
SQLite3::SQLException: misuse of aggregate function count(): SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 1) AND (count(responses.user_id) < count(questions.id))
  [1m[35mUser Load (0.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
DEPRECATION WARNING: Relation#all is deprecated. If you want to eager-load a relation, you can call #load (e.g. `Post.where(published: true).load`). If you want to get an array of records from a relation, you can call #to_a (e.g. `Post.where(published: true).to_a`). (called from __pry__ at (pry):24)
  [1m[36mPoll Load (0.2ms)[0m  [1mSELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 1) AND (count(responses.user_id) < 3)[0m
SQLite3::SQLException: misuse of aggregate function count(): SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 1) AND (count(responses.user_id) < 3)
  [1m[35mUser Load (0.2ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPoll Load (0.3ms)[0m  [1mSELECT count(responses.user_id) < count(questions.id) FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 1)[0m
  [1m[35mUser Load (0.2ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPoll Load (0.2ms)[0m  [1mSELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 1)[0m
  [1m[35mUser Load (0.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPoll Load (0.3ms)[0m  [1mSELECT count(responses.user_id) = count(questions.id) FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 1)[0m
  [1m[35mUser Load (0.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36m (0.3ms)[0m  [1mSELECT "polls"."id" FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 1)[0m
  [1m[35mUser Load (0.2ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36m (0.2ms)[0m  [1mSELECT "polls"."id" FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 1)[0m
  [1m[35mUser Load (0.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36m (0.3ms)[0m  [1mSELECT "polls"."id" FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 1)[0m
  [1m[35mUser Load (0.2ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.2ms)[0m  SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 1)
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.2ms)[0m  SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 1) HAVING count(responses.user_id) = count(questions.id)
SQLite3::SQLException: a GROUP BY clause is required before HAVING: SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 1) HAVING count(responses.user_id) = count(questions.id)
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.5ms)[0m  SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 1) GROUP BY id HAVING count(responses.user_id) = count(questions.id)
  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.3ms)[0m  SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 1) GROUP BY id HAVING count(responses.user_id) < count(questions.id)
  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.4ms)[0m  SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 1) GROUP BY id HAVING count(responses.user_id) < count(questions.id)
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.3ms)[0m  SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 1) GROUP BY id HAVING count(responses.user_id) = count(questions.id)
  [1m[36mQuestion Load (0.5ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  [1m[35mAnswerChoice Load (0.6ms)[0m  SELECT "answer_choices".* FROM "answer_choices"
  [1m[36mQuestion Load (0.2ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  [1m[35mQuestion Load (0.3ms)[0m  SELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (1.0ms)[0m  DELETE FROM "questions" WHERE "questions"."id" = ?  [["id", 1]]
  [1m[36m (1.7ms)[0m  [1mcommit transaction[0m
  [1m[35mQuestion Load (0.2ms)[0m  SELECT "questions".* FROM "questions"
  [1m[36mAnswerChoice Load (0.2ms)[0m  [1mSELECT "answer_choices".* FROM "answer_choices"[0m
  [1m[36m (14.5ms)[0m  [1mCREATE TABLE "answer_choices" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answer" varchar(255), "question_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.4ms)[0m  CREATE INDEX "index_answer_choices_on_question_id" ON "answer_choices" ("question_id")
  [1m[36m (1.3ms)[0m  [1mCREATE TABLE "polls" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar(255), "user_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.4ms)[0m  CREATE INDEX "index_polls_on_user_id" ON "polls" ("user_id")
  [1m[36m (1.2ms)[0m  [1mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "text" varchar(255), "poll_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.8ms)[0m  CREATE INDEX "index_questions_on_poll_id" ON "questions" ("poll_id")
  [1m[36m (1.3ms)[0m  [1mCREATE TABLE "responses" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_id" integer, "answer_choice_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.4ms)[0m  CREATE INDEX "index_responses_on_answer_choice_id" ON "responses" ("answer_choice_id")
  [1m[36m (1.6ms)[0m  [1mCREATE INDEX "index_responses_on_user_id" ON "responses" ("user_id")[0m
  [1m[35m (1.6ms)[0m  CREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_name" varchar(255), "created_at" datetime, "updated_at" datetime) 
  [1m[36m (1.1ms)[0m  [1mCREATE UNIQUE INDEX "index_users_on_user_name" ON "users" ("user_name")[0m
  [1m[35m (1.3ms)[0m  CREATE TABLE "schema_migrations" ("version" varchar(255) NOT NULL) 
  [1m[36m (1.1ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (0.2ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (1.1ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213183137')[0m
  [1m[35m (1.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213181720')
  [1m[36m (1.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213181910')[0m
  [1m[35m (1.2ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213182221')
  [1m[36m (1.2ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213182642')[0m
  [1m[35m (1.2ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213182908')
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'foo' LIMIT 1[0m
  [1m[35mSQL (45.1ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 23:28:43 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 23:28:43 UTC +00:00], ["user_name", "foo"]]
  [1m[36m (1.3ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'the creator' LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 23:28:43 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 23:28:43 UTC +00:00], ["user_name", "the creator"]]
  [1m[36m (1.4ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "polls" ("created_at", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?)[0m  [["created_at", Thu, 13 Feb 2014 23:28:43 UTC +00:00], ["title", "Some Poll"], ["updated_at", Thu, 13 Feb 2014 23:28:43 UTC +00:00], ["user_id", 2]]
  [1m[35m (1.6ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "poll_id", "text", "updated_at") VALUES (?, ?, ?, ?)  [["created_at", Thu, 13 Feb 2014 23:28:43 UTC +00:00], ["poll_id", 1], ["text", "Who, what where?"], ["updated_at", Thu, 13 Feb 2014 23:28:43 UTC +00:00]]
  [1m[36m (1.8ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.2ms)[0m  begin transaction
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answer", "Because"], ["created_at", Thu, 13 Feb 2014 23:28:43 UTC +00:00], ["question_id", 1], ["updated_at", Thu, 13 Feb 2014 23:28:43 UTC +00:00]]
  [1m[35m (1.1ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mResponse Load (0.2ms)[0m   SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 1)

  [1m[36m (0.2ms)[0m  [1mSELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 1)[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES (?, ?, ?, ?)  [["answer_choice_id", 1], ["created_at", Thu, 13 Feb 2014 23:28:43 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 23:28:43 UTC +00:00], ["user_id", 1]]
  [1m[36m (1.2ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'bar' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 23:28:43 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 23:28:43 UTC +00:00], ["user_name", "bar"]]
  [1m[36m (1.1ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'baz' LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 23:28:43 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 23:28:43 UTC +00:00], ["user_name", "baz"]]
  [1m[36m (1.0ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answer", "Why not?"], ["created_at", Thu, 13 Feb 2014 23:28:43 UTC +00:00], ["question_id", 1], ["updated_at", Thu, 13 Feb 2014 23:28:43 UTC +00:00]]
  [1m[35m (1.0ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)  [["answer", "Because lonly"], ["created_at", Thu, 13 Feb 2014 23:28:43 UTC +00:00], ["question_id", 1], ["updated_at", Thu, 13 Feb 2014 23:28:43 UTC +00:00]]
  [1m[36m (0.9ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mResponse Load (0.2ms)[0m  [1m SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 1)
[0m
  [1m[35m (0.1ms)[0m  SELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 1)
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES (?, ?, ?, ?)[0m  [["answer_choice_id", 1], ["created_at", Thu, 13 Feb 2014 23:28:43 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 23:28:43 UTC +00:00], ["user_id", 3]]
  [1m[35m (1.1ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mResponse Load (0.2ms)[0m   SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 4 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 2)

  [1m[36m (0.2ms)[0m  [1mSELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 2)[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES (?, ?, ?, ?)  [["answer_choice_id", 2], ["created_at", Thu, 13 Feb 2014 23:28:43 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 23:28:43 UTC +00:00], ["user_id", 4]]
  [1m[36m (1.1ms)[0m  [1mcommit transaction[0m
  [1m[36mQuestion Load (3.3ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  [1m[35mAnswerChoice Load (0.2ms)[0m  SELECT "answer_choices".* FROM "answer_choices"
  [1m[36mQuestion Load (0.2ms)[0m  [1mSELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mAnswerChoice Load (2.9ms)[0m  [1mSELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" = ?[0m  [["question_id", 1]]
  [1m[35mSQL (0.4ms)[0m  DELETE FROM "answer_choices" WHERE "answer_choices"."id" = ?  [["id", 1]]
  [1m[36mSQL (0.0ms)[0m  [1mDELETE FROM "answer_choices" WHERE "answer_choices"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.0ms)[0m  DELETE FROM "answer_choices" WHERE "answer_choices"."id" = ?  [["id", 3]]
  [1m[36mSQL (0.1ms)[0m  [1mDELETE FROM "questions" WHERE "questions"."id" = ?[0m  [["id", 1]]
  [1m[35m (1.5ms)[0m  commit transaction
  [1m[36mAnswerChoice Load (0.3ms)[0m  [1mSELECT "answer_choices".* FROM "answer_choices"[0m
  [1m[36m (14.7ms)[0m  [1mCREATE TABLE "answer_choices" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answer" varchar(255), "question_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.3ms)[0m  CREATE INDEX "index_answer_choices_on_question_id" ON "answer_choices" ("question_id")
  [1m[36m (1.5ms)[0m  [1mCREATE TABLE "polls" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar(255), "user_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.5ms)[0m  CREATE INDEX "index_polls_on_user_id" ON "polls" ("user_id")
  [1m[36m (1.2ms)[0m  [1mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "text" varchar(255), "poll_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.0ms)[0m  CREATE INDEX "index_questions_on_poll_id" ON "questions" ("poll_id")
  [1m[36m (1.2ms)[0m  [1mCREATE TABLE "responses" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_id" integer, "answer_choice_id" integer, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (1.2ms)[0m  CREATE INDEX "index_responses_on_answer_choice_id" ON "responses" ("answer_choice_id")
  [1m[36m (1.1ms)[0m  [1mCREATE INDEX "index_responses_on_user_id" ON "responses" ("user_id")[0m
  [1m[35m (1.1ms)[0m  CREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_name" varchar(255), "created_at" datetime, "updated_at" datetime) 
  [1m[36m (1.1ms)[0m  [1mCREATE UNIQUE INDEX "index_users_on_user_name" ON "users" ("user_name")[0m
  [1m[35m (1.9ms)[0m  CREATE TABLE "schema_migrations" ("version" varchar(255) NOT NULL) 
  [1m[36m (1.3ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (0.2ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (1.1ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213183137')[0m
  [1m[35m (1.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213181720')
  [1m[36m (1.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213181910')[0m
  [1m[35m (1.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213182221')
  [1m[36m (1.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20140213182642')[0m
  [1m[35m (1.1ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20140213182908')
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'foo' LIMIT 1[0m
  [1m[35mSQL (63.1ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 23:31:29 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 23:31:29 UTC +00:00], ["user_name", "foo"]]
  [1m[36m (3.6ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'the creator' LIMIT 1[0m
  [1m[35mSQL (1.1ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 23:31:29 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 23:31:29 UTC +00:00], ["user_name", "the creator"]]
  [1m[36m (2.7ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.8ms)[0m  [1mINSERT INTO "polls" ("created_at", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?)[0m  [["created_at", Thu, 13 Feb 2014 23:31:29 UTC +00:00], ["title", "Some Poll"], ["updated_at", Thu, 13 Feb 2014 23:31:29 UTC +00:00], ["user_id", 2]]
  [1m[35m (1.5ms)[0m  commit transaction
  [1m[36m (0.2ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "poll_id", "text", "updated_at") VALUES (?, ?, ?, ?)  [["created_at", Thu, 13 Feb 2014 23:31:29 UTC +00:00], ["poll_id", 1], ["text", "Who, what where?"], ["updated_at", Thu, 13 Feb 2014 23:31:29 UTC +00:00]]
  [1m[36m (20.9ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answer", "Because"], ["created_at", Thu, 13 Feb 2014 23:31:30 UTC +00:00], ["question_id", 1], ["updated_at", Thu, 13 Feb 2014 23:31:30 UTC +00:00]]
  [1m[35m (1.0ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mResponse Load (0.2ms)[0m   SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 1)

  [1m[36m (0.2ms)[0m  [1mSELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 1)[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES (?, ?, ?, ?)  [["answer_choice_id", 1], ["created_at", Thu, 13 Feb 2014 23:31:30 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 23:31:30 UTC +00:00], ["user_id", 1]]
  [1m[36m (1.2ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'bar' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 23:31:30 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 23:31:30 UTC +00:00], ["user_name", "bar"]]
  [1m[36m (1.2ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'baz' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Thu, 13 Feb 2014 23:31:30 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 23:31:30 UTC +00:00], ["user_name", "baz"]]
  [1m[36m (1.4ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answer", "Why not?"], ["created_at", Thu, 13 Feb 2014 23:31:30 UTC +00:00], ["question_id", 1], ["updated_at", Thu, 13 Feb 2014 23:31:30 UTC +00:00]]
  [1m[35m (1.1ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)  [["answer", "Because lonly"], ["created_at", Thu, 13 Feb 2014 23:31:30 UTC +00:00], ["question_id", 1], ["updated_at", Thu, 13 Feb 2014 23:31:30 UTC +00:00]]
  [1m[36m (1.0ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mResponse Load (0.2ms)[0m  [1m SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 1)
[0m
  [1m[35m (0.1ms)[0m  SELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 1)
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES (?, ?, ?, ?)[0m  [["answer_choice_id", 1], ["created_at", Thu, 13 Feb 2014 23:31:30 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 23:31:30 UTC +00:00], ["user_id", 3]]
  [1m[35m (1.2ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mResponse Load (0.2ms)[0m   SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 4 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 2)

  [1m[36m (0.1ms)[0m  [1mSELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 2)[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES (?, ?, ?, ?)  [["answer_choice_id", 2], ["created_at", Thu, 13 Feb 2014 23:31:30 UTC +00:00], ["updated_at", Thu, 13 Feb 2014 23:31:30 UTC +00:00], ["user_id", 4]]
  [1m[36m (1.1ms)[0m  [1mcommit transaction[0m
  [1m[36mQuestion Load (0.4ms)[0m  [1mSELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1[0m
  [1m[35mAnswerChoice Load (13.4ms)[0m  SELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" = ?  [["question_id", 1]]
  [1m[36mResponse Load (0.6ms)[0m  [1mSELECT "responses".* FROM "responses" WHERE "responses"."answer_choice_id" IN (1, 2, 3)[0m
  [1m[35mQuestion Load (0.1ms)[0m  SELECT "questions".* FROM "questions" ORDER BY "questions"."id" ASC LIMIT 1
  [1m[36mAnswerChoice Load (0.3ms)[0m  [1mSELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" = ?[0m  [["question_id", 1]]
  [1m[35mResponse Load (0.3ms)[0m  SELECT "responses".* FROM "responses" WHERE "responses"."answer_choice_id" IN (1, 2, 3)
  [1m[36mUser Load (7.7ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."user_name" = 'Andrew' LIMIT 1[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'Andrew' LIMIT 1[0m
  [1m[35mSQL (54.5ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Fri, 14 Feb 2014 00:25:00 UTC +00:00], ["updated_at", Fri, 14 Feb 2014 00:25:00 UTC +00:00], ["user_name", "Andrew"]]
  [1m[36m (1.3ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (31.4ms)[0m  [1mINSERT INTO "polls" ("created_at", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?)[0m  [["created_at", Fri, 14 Feb 2014 00:25:20 UTC +00:00], ["title", "What do you think of cli"], ["updated_at", Fri, 14 Feb 2014 00:25:20 UTC +00:00], ["user_id", 5]]
  [1m[35m (9.7ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (38.4ms)[0m  INSERT INTO "questions" ("created_at", "poll_id", "text", "updated_at") VALUES (?, ?, ?, ?)  [["created_at", Fri, 14 Feb 2014 00:25:49 UTC +00:00], ["poll_id", 2], ["text", "Is it cooler than sliced bread?"], ["updated_at", Fri, 14 Feb 2014 00:25:49 UTC +00:00]]
  [1m[36m (1.5ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answer", "yes"], ["created_at", Fri, 14 Feb 2014 00:25:53 UTC +00:00], ["question_id", 2], ["updated_at", Fri, 14 Feb 2014 00:25:53 UTC +00:00]]
  [1m[35m (1.7ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)  [["answer", "no"], ["created_at", Fri, 14 Feb 2014 00:25:54 UTC +00:00], ["question_id", 2], ["updated_at", Fri, 14 Feb 2014 00:25:54 UTC +00:00]]
  [1m[36m (5.8ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "questions" ("created_at", "poll_id", "text", "updated_at") VALUES (?, ?, ?, ?)[0m  [["created_at", Fri, 14 Feb 2014 00:26:05 UTC +00:00], ["poll_id", 2], ["text", "is it better than your mom"], ["updated_at", Fri, 14 Feb 2014 00:26:05 UTC +00:00]]
  [1m[35m (1.7ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (0.8ms)[0m  INSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)  [["answer", "no"], ["created_at", Fri, 14 Feb 2014 00:26:17 UTC +00:00], ["question_id", 3], ["updated_at", Fri, 14 Feb 2014 00:26:17 UTC +00:00]]
  [1m[36m (5.5ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answer", "dont talk about my mom that way"], ["created_at", Fri, 14 Feb 2014 00:26:23 UTC +00:00], ["question_id", 3], ["updated_at", Fri, 14 Feb 2014 00:26:23 UTC +00:00]]
  [1m[35m (1.6ms)[0m  commit transaction
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."user_name" = 'foo' LIMIT 1[0m
  [1m[35mPoll Load (0.2ms)[0m  SELECT "polls".* FROM "polls" WHERE "polls"."title" = 'What do you think of cli' LIMIT 1
  [1m[36mQuestion Load (2.8ms)[0m  [1mSELECT "questions".* FROM "questions" WHERE "questions"."poll_id" = ?[0m  [["poll_id", 2]]
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."user_name" = 'foo' LIMIT 1[0m
  [1m[35mPoll Load (0.2ms)[0m  SELECT "polls".* FROM "polls" WHERE "polls"."title" = 'What do you think of cli' LIMIT 1
  [1m[36mQuestion Load (26.8ms)[0m  [1mSELECT "questions".* FROM "questions" WHERE "questions"."poll_id" = ?[0m  [["poll_id", 2]]
  [1m[35mAnswerChoice Load (0.3ms)[0m  SELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" = ?  [["question_id", 2]]
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mResponse Load (11.1ms)[0m   SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 5)

  [1m[36m (0.2ms)[0m  [1mSELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 5)[0m
  [1m[35mSQL (32.6ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES (?, ?, ?, ?)  [["answer_choice_id", 5], ["created_at", Fri, 14 Feb 2014 00:27:36 UTC +00:00], ["updated_at", Fri, 14 Feb 2014 00:27:36 UTC +00:00], ["user_id", 1]]
  [1m[36m (1.2ms)[0m  [1mcommit transaction[0m
  [1m[35mAnswerChoice Load (0.1ms)[0m  SELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" = ?  [["question_id", 3]]
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mResponse Load (0.7ms)[0m   SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 7)

  [1m[36m (0.2ms)[0m  [1mSELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 7)[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES (?, ?, ?, ?)  [["answer_choice_id", 7], ["created_at", Fri, 14 Feb 2014 00:27:39 UTC +00:00], ["updated_at", Fri, 14 Feb 2014 00:27:39 UTC +00:00], ["user_id", 1]]
  [1m[36m (1.0ms)[0m  [1mcommit transaction[0m
  [1m[36mPoll Load (2.0ms)[0m  [1mSELECT "polls".* FROM "polls"[0m
  [1m[35mResponse Load (0.2ms)[0m  SELECT "responses".* FROM "responses"
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."user_name" = 'bar' LIMIT 1[0m
  [1m[35mPoll Load (0.1ms)[0m  SELECT "polls".* FROM "polls" WHERE "polls"."title" = 'What do you think of cli' LIMIT 1
  [1m[36mQuestion Load (0.4ms)[0m  [1mSELECT "questions".* FROM "questions" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "questions"."poll_id" = ? AND (responses.user_id != 3)[0m  [["poll_id", 2]]
  [1m[35mAnswerChoice Load (0.2ms)[0m  SELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" = ?  [["question_id", 2]]
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mResponse Load (0.4ms)[0m   SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 5)

  [1m[36m (0.1ms)[0m  [1mSELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 5)[0m
  [1m[35mSQL (31.5ms)[0m  INSERT INTO "responses" ("answer_choice_id", "created_at", "updated_at", "user_id") VALUES (?, ?, ?, ?)  [["answer_choice_id", 5], ["created_at", Fri, 14 Feb 2014 00:37:19 UTC +00:00], ["updated_at", Fri, 14 Feb 2014 00:37:19 UTC +00:00], ["user_id", 3]]
  [1m[36m (1.7ms)[0m  [1mcommit transaction[0m
  [1m[35mAnswerChoice Load (0.2ms)[0m  SELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" = ?  [["question_id", 3]]
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."user_name" = 'bar' LIMIT 1[0m
  [1m[35mPoll Load (0.3ms)[0m  SELECT "polls".* FROM "polls" WHERE "polls"."title" = 'What do you think of cli' LIMIT 1
  [1m[36mPoll Load (0.3ms)[0m  [1mSELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) GROUP BY id HAVING count(responses.user_id) < count(questions.id)[0m
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."user_name" = 'bar' LIMIT 1[0m
  [1m[35mPoll Load (0.2ms)[0m  SELECT "polls".* FROM "polls" WHERE "polls"."title" = 'What do you think of cli' LIMIT 1
  [1m[36mQuestion Load (0.5ms)[0m  [1mSELECT "questions".* FROM "questions" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE "questions"."poll_id" = ? AND (responses.user_id != 3)[0m  [["poll_id", 2]]
  [1m[35mAnswerChoice Load (0.3ms)[0m  SELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" = ?  [["question_id", 2]]
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mResponse Load (0.5ms)[0m   SELECT
 responses.*
 FROM
 responses JOIN answer_choices
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3 AND
 answer_choices.question_id IN (
 SELECT
 question_id
 FROM
 answer_choices
 WHERE
 id = 5)

  [1m[36m (0.2ms)[0m  [1mSELECT "users"."id" FROM "users" INNER JOIN "polls" ON "polls"."user_id" = "users"."id" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" WHERE (answer_choices.id = 5)[0m
  [1m[35m (0.1ms)[0m  rollback transaction
  [1m[36mUser Load (23.0ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mUser Load (3.5ms)[0m  SELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1  [["id", 3]]
  [1m[36mPoll Load (0.4ms)[0m  [1mSELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) GROUP BY id HAVING count(responses.user_id) = count(questions.id)[0m
  [1m[35mPoll Load (0.4ms)[0m  SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) GROUP BY id HAVING count(responses.user_id) < count(questions.id)
  [1m[36mResponse Load (0.2ms)[0m  [1mSELECT "responses".* FROM "responses" WHERE "responses"."user_id" = ?[0m  [["user_id", 3]]
  [1m[35mUser Load (0.1ms)[0m  SELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1  [["id", 3]]
  [1m[36mPoll Load (0.3ms)[0m  [1mSELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) GROUP BY poll_id HAVING count(responses.user_id) < count(questions.id)[0m
  [1m[35mPoll Load (0.3ms)[0m  SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) GROUP BY id HAVING count(responses.user_id) = count(questions.id)
  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.2ms)[0m  SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3)
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.4ms)[0m  SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) GROUP BY question_id HAVING count(responses.user_id) < count(questions.id)
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.3ms)[0m  SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) AND (question.poll_id = poll.id) GROUP BY question_id HAVING count(responses.user_id) < count(questions.id)
SQLite3::SQLException: no such column: question.poll_id: SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) AND (question.poll_id = poll.id) GROUP BY question_id HAVING count(responses.user_id) < count(questions.id)
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.4ms)[0m  SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) AND (questions.poll_id = polls.id) GROUP BY question_id HAVING count(responses.user_id) < count(questions.id)
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.6ms)[0m  SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) AND (questions.poll_id = polls.id) GROUP BY id HAVING count(responses.user_id) < count(questions.id)
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.3ms)[0m  SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) GROUP BY polls.id HAVING count(responses.user_id) < count(questions.id)
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mUser Load (0.2ms)[0m  SELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1  [["id", 3]]
DEPRECATION WARNING: It looks like you are eager loading table(s) (one of: polls, responses, questions) that are referenced in a string SQL snippet. For example: 

    Post.includes(:comments).where("comments.title = 'foo'")

Currently, Active Record recognizes the table in the string, and knows to JOIN the comments table to the query, rather than loading comments in a separate query. However, doing this without writing a full-blown SQL parser is inherently flawed. Since we don't want to write an SQL parser, we are removing this functionality. From now on, you must explicitly tell Active Record when you are referencing a table from a string:

    Post.includes(:comments).where("comments.title = 'foo'").references(:comments)

If you don't rely on implicit join references you can disable the feature entirely by setting `config.active_record.disable_implicit_join_references = true`. (called from block in pp at /Users/appacademy/.rvm/rubies/ruby-1.9.3-p392/lib/ruby/1.9.1/pp.rb:154)
  [1m[36mSQL (0.3ms)[0m  [1mSELECT "polls"."id" AS t0_r0, "polls"."title" AS t0_r1, "polls"."user_id" AS t0_r2, "polls"."created_at" AS t0_r3, "polls"."updated_at" AS t0_r4, "questions"."id" AS t1_r0, "questions"."text" AS t1_r1, "questions"."poll_id" AS t1_r2, "questions"."created_at" AS t1_r3, "questions"."updated_at" AS t1_r4, "answer_choices"."id" AS t2_r0, "answer_choices"."answer" AS t2_r1, "answer_choices"."question_id" AS t2_r2, "answer_choices"."created_at" AS t2_r3, "answer_choices"."updated_at" AS t2_r4, "responses"."id" AS t3_r0, "responses"."user_id" AS t3_r1, "responses"."answer_choice_id" AS t3_r2, "responses"."created_at" AS t3_r3, "responses"."updated_at" AS t3_r4 FROM "polls" LEFT OUTER JOIN "questions" ON "questions"."poll_id" = "polls"."id" LEFT OUTER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" LEFT OUTER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) GROUP BY polls.id HAVING count(responses.user_id) < count(questions.id)[0m
DEPRECATION WARNING: It looks like you are eager loading table(s) (one of: polls, responses, questions) that are referenced in a string SQL snippet. For example: 

    Post.includes(:comments).where("comments.title = 'foo'")

Currently, Active Record recognizes the table in the string, and knows to JOIN the comments table to the query, rather than loading comments in a separate query. However, doing this without writing a full-blown SQL parser is inherently flawed. Since we don't want to write an SQL parser, we are removing this functionality. From now on, you must explicitly tell Active Record when you are referencing a table from a string:

    Post.includes(:comments).where("comments.title = 'foo'").references(:comments)

If you don't rely on implicit join references you can disable the feature entirely by setting `config.active_record.disable_implicit_join_references = true`. (called from block in pp at /Users/appacademy/.rvm/rubies/ruby-1.9.3-p392/lib/ruby/1.9.1/pp.rb:154)
  [1m[35mSQL (0.3ms)[0m  SELECT "polls"."id" AS t0_r0, "polls"."title" AS t0_r1, "polls"."user_id" AS t0_r2, "polls"."created_at" AS t0_r3, "polls"."updated_at" AS t0_r4, "questions"."id" AS t1_r0, "questions"."text" AS t1_r1, "questions"."poll_id" AS t1_r2, "questions"."created_at" AS t1_r3, "questions"."updated_at" AS t1_r4, "answer_choices"."id" AS t2_r0, "answer_choices"."answer" AS t2_r1, "answer_choices"."question_id" AS t2_r2, "answer_choices"."created_at" AS t2_r3, "answer_choices"."updated_at" AS t2_r4, "responses"."id" AS t3_r0, "responses"."user_id" AS t3_r1, "responses"."answer_choice_id" AS t3_r2, "responses"."created_at" AS t3_r3, "responses"."updated_at" AS t3_r4 FROM "polls" LEFT OUTER JOIN "questions" ON "questions"."poll_id" = "polls"."id" LEFT OUTER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" LEFT OUTER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) GROUP BY id HAVING count(responses.user_id) = count(questions.id)
SQLite3::SQLException: ambiguous column name: id: SELECT "polls"."id" AS t0_r0, "polls"."title" AS t0_r1, "polls"."user_id" AS t0_r2, "polls"."created_at" AS t0_r3, "polls"."updated_at" AS t0_r4, "questions"."id" AS t1_r0, "questions"."text" AS t1_r1, "questions"."poll_id" AS t1_r2, "questions"."created_at" AS t1_r3, "questions"."updated_at" AS t1_r4, "answer_choices"."id" AS t2_r0, "answer_choices"."answer" AS t2_r1, "answer_choices"."question_id" AS t2_r2, "answer_choices"."created_at" AS t2_r3, "answer_choices"."updated_at" AS t2_r4, "responses"."id" AS t3_r0, "responses"."user_id" AS t3_r1, "responses"."answer_choice_id" AS t3_r2, "responses"."created_at" AS t3_r3, "responses"."updated_at" AS t3_r4 FROM "polls" LEFT OUTER JOIN "questions" ON "questions"."poll_id" = "polls"."id" LEFT OUTER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" LEFT OUTER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) GROUP BY id HAVING count(responses.user_id) = count(questions.id)
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.3ms)[0m  SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) GROUP BY id HAVING count(responses.user_id) < count(questions.id)
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.5ms)[0m  SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) GROUP BY id HAVING count(responses.user_id) < count(questions.id)
  [1m[36mPoll Load (0.4ms)[0m  [1mSELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) GROUP BY id HAVING count(responses.user_id) = count(questions.id)[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1  [["id", 3]]
  [1m[36mPoll Load (0.3ms)[0m  [1mSELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) GROUP BY id HAVING count(responses.user_id) < count(questions.id)[0m
  [1m[35mPoll Load (0.4ms)[0m  SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) GROUP BY id HAVING count(responses.user_id) > count(questions.id)
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.4ms)[0m  SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) GROUP BY id HAVING count(responses.user_id) < count(questions.id)
  [1m[36mPoll Load (0.4ms)[0m  [1mSELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) GROUP BY id HAVING count(responses.user_id) = count(questions.id)[0m
  [1m[35mQuestion Load (0.3ms)[0m  SELECT "questions".* FROM "questions"
  [1m[36mResponse Load (0.3ms)[0m  [1mSELECT "responses".* FROM "responses"[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1  [["id", 3]]
  [1m[36mPoll Load (0.4ms)[0m  [1mSELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) GROUP BY id HAVING count(responses.user_id) < count(questions.id)[0m
  [1m[35mPoll Load (0.4ms)[0m  SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) GROUP BY polls.id HAVING count(responses.user_id) = count(questions.id)
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.4ms)[0m  SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) GROUP BY question.poll_id HAVING count(responses.user_id) = count(questions.id)
SQLite3::SQLException: no such column: question.poll_id: SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) GROUP BY question.poll_id HAVING count(responses.user_id) = count(questions.id)
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.5ms)[0m  SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) GROUP BY questions.poll_id HAVING count(responses.user_id) = count(questions.id)
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.3ms)[0m  SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) GROUP BY questions.id HAVING count(responses.user_id) = count(questions.id)
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.3ms)[0m  SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) GROUP BY polls.id
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.5ms)[0m  SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) GROUP BY polls.id HAVING count(responses.user_id) = 2
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.3ms)[0m  SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3) GROUP BY polls.id HAVING count(responses.user_id) = 1
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mQuestion Load (0.3ms)[0m  SELECT "questions".* FROM "questions"
  [1m[36mAnswerChoice Load (0.3ms)[0m  [1mSELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" IN (1, 2, 3)[0m
  [1m[35mResponse Load (0.3ms)[0m  SELECT "responses".* FROM "responses" WHERE "responses"."answer_choice_id" IN (1, 2, 3, 4, 5, 6, 7)
  [1m[36mQuestion Load (0.3ms)[0m  [1mSELECT "questions".* FROM "questions"[0m
  [1m[35mAnswerChoice Load (0.4ms)[0m  SELECT "answer_choices".* FROM "answer_choices" WHERE "answer_choices"."question_id" IN (1, 2, 3)
  [1m[36mResponse Load (0.3ms)[0m  [1mSELECT "responses".* FROM "responses" WHERE "responses"."answer_choice_id" IN (1, 2, 3, 4, 5, 6, 7)[0m
  [1m[35mUser Load (0.2ms)[0m  SELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1  [["id", 3]]
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mUser Load (0.3ms)[0m  SELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1  [["id", 3]]
  [1m[36mPoll Load (0.4ms)[0m  [1mSELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id"[0m
DEPRECATION WARNING: It looks like you are eager loading table(s) (one of: polls, questions, responses) that are referenced in a string SQL snippet. For example: 

    Post.includes(:comments).where("comments.title = 'foo'")

Currently, Active Record recognizes the table in the string, and knows to JOIN the comments table to the query, rather than loading comments in a separate query. However, doing this without writing a full-blown SQL parser is inherently flawed. Since we don't want to write an SQL parser, we are removing this functionality. From now on, you must explicitly tell Active Record when you are referencing a table from a string:

    Post.includes(:comments).where("comments.title = 'foo'").references(:comments)

If you don't rely on implicit join references you can disable the feature entirely by setting `config.active_record.disable_implicit_join_references = true`. (called from block in pp at /Users/appacademy/.rvm/rubies/ruby-1.9.3-p392/lib/ruby/1.9.1/pp.rb:154)
  [1m[35mUser Load (0.3ms)[0m  SELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1  [["id", 3]]
DEPRECATION WARNING: It looks like you are eager loading table(s) (one of: polls, questions, responses) that are referenced in a string SQL snippet. For example: 

    Post.includes(:comments).where("comments.title = 'foo'")

Currently, Active Record recognizes the table in the string, and knows to JOIN the comments table to the query, rather than loading comments in a separate query. However, doing this without writing a full-blown SQL parser is inherently flawed. Since we don't want to write an SQL parser, we are removing this functionality. From now on, you must explicitly tell Active Record when you are referencing a table from a string:

    Post.includes(:comments).where("comments.title = 'foo'").references(:comments)

If you don't rely on implicit join references you can disable the feature entirely by setting `config.active_record.disable_implicit_join_references = true`. (called from block in pp at /Users/appacademy/.rvm/rubies/ruby-1.9.3-p392/lib/ruby/1.9.1/pp.rb:154)
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.4ms)[0m  SELECT "polls".* FROM "polls" INNER JOIN "questions" ON "questions"."poll_id" = "polls"."id" INNER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" INNER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3)
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
DEPRECATION WARNING: It looks like you are eager loading table(s) (one of: polls, responses) that are referenced in a string SQL snippet. For example: 

    Post.includes(:comments).where("comments.title = 'foo'")

Currently, Active Record recognizes the table in the string, and knows to JOIN the comments table to the query, rather than loading comments in a separate query. However, doing this without writing a full-blown SQL parser is inherently flawed. Since we don't want to write an SQL parser, we are removing this functionality. From now on, you must explicitly tell Active Record when you are referencing a table from a string:

    Post.includes(:comments).where("comments.title = 'foo'").references(:comments)

If you don't rely on implicit join references you can disable the feature entirely by setting `config.active_record.disable_implicit_join_references = true`. (called from block in pp at /Users/appacademy/.rvm/rubies/ruby-1.9.3-p392/lib/ruby/1.9.1/pp.rb:154)
  [1m[35mSQL (0.4ms)[0m  SELECT "polls"."id" AS t0_r0, "polls"."title" AS t0_r1, "polls"."user_id" AS t0_r2, "polls"."created_at" AS t0_r3, "polls"."updated_at" AS t0_r4, "questions"."id" AS t1_r0, "questions"."text" AS t1_r1, "questions"."poll_id" AS t1_r2, "questions"."created_at" AS t1_r3, "questions"."updated_at" AS t1_r4, "answer_choices"."id" AS t2_r0, "answer_choices"."answer" AS t2_r1, "answer_choices"."question_id" AS t2_r2, "answer_choices"."created_at" AS t2_r3, "answer_choices"."updated_at" AS t2_r4, "responses"."id" AS t3_r0, "responses"."user_id" AS t3_r1, "responses"."answer_choice_id" AS t3_r2, "responses"."created_at" AS t3_r3, "responses"."updated_at" AS t3_r4 FROM "polls" LEFT OUTER JOIN "questions" ON "questions"."poll_id" = "polls"."id" LEFT OUTER JOIN "answer_choices" ON "answer_choices"."question_id" = "questions"."id" LEFT OUTER JOIN "responses" ON "responses"."answer_choice_id" = "answer_choices"."id" WHERE (responses.user_id = 3)
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.3ms)[0m   SELECT
 polls.*
 FROM
 polls JOIN questions
 ON polls.question_id = questions.id
 LEFT OUTER JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 users.id = 3
 GROUP BY
 polls.id
 HAVING
 COUNT(responses.user_id) = COUNT(questions.id)

SQLite3::SQLException: no such column: users.id:     SELECT
      polls.*
    FROM
    polls JOIN questions
      ON polls.question_id = questions.id
      LEFT OUTER JOIN answer_choices
        ON answer_choices.question_id = questions.id
        JOIN responses
          ON responses.answer_choice_id = answer_choices.id
    WHERE
      users.id = 3
    GROUP BY
      polls.id
    HAVING
      COUNT(responses.user_id) = COUNT(questions.id)

  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.4ms)[0m   SELECT
 polls.*
 FROM
 polls JOIN questions
 ON polls.question_id = questions.id
 LEFT OUTER JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 polls.user_id = 3
 GROUP BY
 polls.id
 HAVING
 COUNT(responses.user_id) = COUNT(questions.id)

SQLite3::SQLException: no such column: polls.question_id:     SELECT
      polls.*
    FROM
    polls JOIN questions
      ON polls.question_id = questions.id
      LEFT OUTER JOIN answer_choices
        ON answer_choices.question_id = questions.id
        JOIN responses
          ON responses.answer_choice_id = answer_choices.id
    WHERE
      polls.user_id = 3
    GROUP BY
      polls.id
    HAVING
      COUNT(responses.user_id) = COUNT(questions.id)

  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.3ms)[0m   SELECT
 polls.*
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 LEFT OUTER JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 polls.user_id = 3
 GROUP BY
 polls.id
 HAVING
 COUNT(responses.user_id) = COUNT(questions.id)

  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.3ms)[0m   SELECT
 polls.*
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 LEFT OUTER JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 polls.user_id = 3
 GROUP BY
 polls.id
 HAVING
 COUNT(responses.user_id) < COUNT(questions.id)

  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.4ms)[0m   SELECT
 polls.*
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 LEFT OUTER JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 polls.user_id = 3
 GROUP BY
 polls.id
 HAVING
 COUNT(responses.user_id) > COUNT(questions.id)

  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.3ms)[0m   SELECT
 polls.*
 FROM
 questions LEFT OUTER JOIN polls
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 polls.user_id = 3
 GROUP BY
 polls.id
 HAVING
 COUNT(responses.user_id) > COUNT(questions.id)

  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.4ms)[0m   SELECT
 polls.*
 FROM
 questions LEFT OUTER JOIN polls
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 polls.user_id = 3
 GROUP BY
 polls.id
 HAVING
 COUNT(responses.user_id) = COUNT(questions.id)

  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.4ms)[0m   SELECT
 polls.*
 FROM
 questions LEFT OUTER JOIN polls
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 polls.user_id = 3
 GROUP BY
 polls.id
 HAVING
 COUNT(responses.user_id) < COUNT(questions.id)

  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.3ms)[0m   SELECT
 polls.*
 FROM
 questions LEFT OUTER JOIN polls
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 polls.user_id = 3
 GROUP BY
 polls.id


  [1m[36mUser Load (0.4ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.5ms)[0m   SELECT
 polls.*
 FROM
 questions LEFT OUTER JOIN polls
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 polls.user_id = 3


  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.4ms)[0m   SELECT
 polls.*
 FROM
 questions LEFT OUTER JOIN polls
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id


  [1m[36mResponse Load (0.4ms)[0m  [1mSELECT "responses".* FROM "responses"[0m
  [1m[35mUser Load (0.2ms)[0m  SELECT "users".* FROM "users"
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.4ms)[0m   SELECT
 polls.*
 FROM
 questions LEFT OUTER JOIN polls
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 polls.user_id = 3


  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.3ms)[0m   SELECT
 polls.*
 FROM
 questions LEFT OUTER JOIN polls
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3


  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.3ms)[0m   SELECT
 polls.*
 FROM
 questions LEFT OUTER JOIN polls
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id
 HAVING
 COUNT(responses.user_id) COUNT(questions.id)

SQLite3::SQLException: near "COUNT": syntax error:     SELECT
      polls.*
    FROM
    questions LEFT OUTER JOIN polls
      ON polls.id = questions.poll_id
      JOIN answer_choices
        ON answer_choices.question_id = questions.id
        JOIN responses
          ON responses.answer_choice_id = answer_choices.id
    WHERE
      responses.user_id = 3
    GROUP BY
      polls.id
    HAVING
      COUNT(responses.user_id)  COUNT(questions.id)

  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.4ms)[0m   SELECT
 polls.*
 FROM
 questions LEFT OUTER JOIN polls
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id
 HAVING
 COUNT(responses.user_id) = COUNT(questions.id)

  [1m[36mUser Load (0.4ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.4ms)[0m   SELECT
 polls.*
 FROM
 questions JOIN polls
 ON polls.id = questions.poll_id
 LEFT OUTER JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id
 HAVING
 COUNT(responses.user_id) = COUNT(questions.id)

  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.4ms)[0m   SELECT
 polls.*
 FROM
 questions JOIN polls
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 LEFT OUTER JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id
 HAVING
 COUNT(responses.user_id) = COUNT(questions.id)

  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.3ms)[0m   SELECT
 polls.*
 FROM
 questions JOIN polls
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 right OUTER JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id
 HAVING
 COUNT(responses.user_id) = COUNT(questions.id)

SQLite3::SQLException: RIGHT and FULL OUTER JOINs are not currently supported:     SELECT
      polls.*
    FROM
    questions  JOIN polls
      ON polls.id = questions.poll_id
     JOIN answer_choices
        ON answer_choices.question_id = questions.id
       right OUTER  JOIN responses
          ON responses.answer_choice_id = answer_choices.id
    WHERE
      responses.user_id = 3
    GROUP BY
      polls.id
    HAVING
      COUNT(responses.user_id) = COUNT(questions.id)

  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.5ms)[0m   SELECT
 polls.*
 FROM
 questions JOIN polls
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id


  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1[0m  [["id", 3]]
  [1m[35mPoll Load (0.4ms)[0m   SELECT
 polls.*
 FROM
 questions JOIN polls
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id


  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.2ms)[0m   SELECT
 polls.*
 FROM
 (questions JOIN polls
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id) AS lots
 WHERE
 responses.user_id = 1
 GROUP BY (
 SELECT
 responses.*
 FROM
 lots
 WHERE
 responses.*
 )


SQLite3::SQLException: near "*": syntax error:     SELECT
      polls.*
    FROM
    (questions  JOIN polls
      ON polls.id = questions.poll_id
     JOIN answer_choices
        ON answer_choices.question_id = questions.id
         JOIN responses
          ON responses.answer_choice_id = answer_choices.id) AS lots
    WHERE
      responses.user_id = 1
    GROUP BY (
      SELECT
      responses.*
      FROM
      lots
      WHERE
      responses.*
    )


  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.2ms)[0m   SELECT
 polls.*
 FROM
 (questions JOIN polls
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id) AS lots
 WHERE
 responses.user_id = 1
 GROUP BY (
 SELECT
 responses.*
 FROM
 lots) IN [4]


SQLite3::SQLException: no such table: lots:     SELECT
      polls.*
    FROM
    (questions  JOIN polls
      ON polls.id = questions.poll_id
     JOIN answer_choices
        ON answer_choices.question_id = questions.id
         JOIN responses
          ON responses.answer_choice_id = answer_choices.id) AS lots
    WHERE
      responses.user_id = 1
    GROUP BY (
      SELECT
      responses.*
      FROM
    lots) IN [4]


  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.2ms)[0m   SELECT
 polls.*
 FROM
 questions JOIN polls
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id AS lots
 WHERE
 responses.user_id = 1
 GROUP BY (
 polls.id
 )


SQLite3::SQLException: near "AS": syntax error:     SELECT
      polls.*
    FROM
    questions  JOIN polls
      ON polls.id = questions.poll_id
     JOIN answer_choices
        ON answer_choices.question_id = questions.id
         JOIN responses
          ON responses.answer_choice_id = answer_choices.id AS lots
    WHERE
      responses.user_id = 1
    GROUP BY (
      polls.id
    )


  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.2ms)[0m   SELECT
 polls.*
 FROM
 questions JOIN polls
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id AS lots
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id



SQLite3::SQLException: near "AS": syntax error:     SELECT
      polls.*
    FROM
    questions  JOIN polls
      ON polls.id = questions.poll_id
     JOIN answer_choices
        ON answer_choices.question_id = questions.id
         JOIN responses
          ON responses.answer_choice_id = answer_choices.id AS lots
    WHERE
      responses.user_id = 1
    GROUP BY
      polls.id



  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.3ms)[0m   SELECT
 polls.*
 FROM
 questions JOIN polls
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id



  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."user_name" = 'frankenberry' LIMIT 1[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."user_name" = 'frankenberry' LIMIT 1[0m
  [1m[35mSQL (27.3ms)[0m  INSERT INTO "users" ("created_at", "updated_at", "user_name") VALUES (?, ?, ?)  [["created_at", Fri, 14 Feb 2014 03:24:10 UTC +00:00], ["updated_at", Fri, 14 Feb 2014 03:24:10 UTC +00:00], ["user_name", "frankenberry"]]
  [1m[36m (1.1ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.7ms)[0m  [1mINSERT INTO "polls" ("created_at", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?)[0m  [["created_at", Fri, 14 Feb 2014 03:24:21 UTC +00:00], ["title", "frankenberry"], ["updated_at", Fri, 14 Feb 2014 03:24:21 UTC +00:00], ["user_id", 6]]
  [1m[35m (1.1ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "poll_id", "text", "updated_at") VALUES (?, ?, ?, ?)  [["created_at", Fri, 14 Feb 2014 03:24:34 UTC +00:00], ["poll_id", 3], ["text", "how much"], ["updated_at", Fri, 14 Feb 2014 03:24:34 UTC +00:00]]
  [1m[36m (1.1ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answer", "2"], ["created_at", Fri, 14 Feb 2014 03:24:38 UTC +00:00], ["question_id", 4], ["updated_at", Fri, 14 Feb 2014 03:24:38 UTC +00:00]]
  [1m[35m (0.9ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "questions" ("created_at", "poll_id", "text", "updated_at") VALUES (?, ?, ?, ?)  [["created_at", Fri, 14 Feb 2014 03:24:47 UTC +00:00], ["poll_id", 3], ["text", "why two?"], ["updated_at", Fri, 14 Feb 2014 03:24:47 UTC +00:00]]
  [1m[36m (1.3ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answer", "1+1"], ["created_at", Fri, 14 Feb 2014 03:24:53 UTC +00:00], ["question_id", 5], ["updated_at", Fri, 14 Feb 2014 03:24:53 UTC +00:00]]
  [1m[35m (0.9ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)  [["answer", "3-1"], ["created_at", Fri, 14 Feb 2014 03:24:56 UTC +00:00], ["question_id", 5], ["updated_at", Fri, 14 Feb 2014 03:24:56 UTC +00:00]]
  [1m[36m (0.9ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "questions" ("created_at", "poll_id", "text", "updated_at") VALUES (?, ?, ?, ?)[0m  [["created_at", Fri, 14 Feb 2014 03:25:07 UTC +00:00], ["poll_id", 3], ["text", "magic"], ["updated_at", Fri, 14 Feb 2014 03:25:07 UTC +00:00]]
  [1m[35m (1.1ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)  [["answer", "4"], ["created_at", Fri, 14 Feb 2014 03:25:10 UTC +00:00], ["question_id", 6], ["updated_at", Fri, 14 Feb 2014 03:25:10 UTC +00:00]]
  [1m[36m (1.0ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "answer_choices" ("answer", "created_at", "question_id", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answer", "42"], ["created_at", Fri, 14 Feb 2014 03:25:11 UTC +00:00], ["question_id", 6], ["updated_at", Fri, 14 Feb 2014 03:25:11 UTC +00:00]]
  [1m[35m (0.9ms)[0m  commit transaction
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.3ms)[0m   SELECT
 polls.*
 FROM
 questions JOIN polls
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id



  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.2ms)[0m   SELECT
 polls.*
 FROM
 polls pl JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1
 -- GROUP BY
-- polls.id
-- HAVING
--


SQLite3::SQLException: no such table: polls:     SELECT
      polls.*
    FROM
    polls pl JOIN questions
      ON polls.id = questions.poll_id
     JOIN answer_choices
        ON answer_choices.question_id = questions.id
         JOIN responses
          ON responses.answer_choice_id = answer_choices.id
    WHERE
      responses.user_id = 1
    -- GROUP BY
--       polls.id
--     HAVING
--


  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.4ms)[0m   SELECT
 polls.*
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1
 -- GROUP BY
-- polls.id
-- HAVING
--


  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.1ms)[0m   SELECT
 polls.id, COUNT(response.*)
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1
 -- GROUP BY
-- polls.id
-- HAVING
--


SQLite3::SQLException: near "*": syntax error:     SELECT
      polls.id, COUNT(response.*)
    FROM
    polls JOIN questions
      ON polls.id = questions.poll_id
     JOIN answer_choices
        ON answer_choices.question_id = questions.id
         JOIN responses
          ON responses.answer_choice_id = answer_choices.id
    WHERE
      responses.user_id = 1
    -- GROUP BY
--       polls.id
--     HAVING
--


  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.1ms)[0m   SELECT
 polls.id, COUNT(responses.*)
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1
 -- GROUP BY
-- polls.id
-- HAVING
--


SQLite3::SQLException: near "*": syntax error:     SELECT
      polls.id, COUNT(responses.*)
    FROM
    polls JOIN questions
      ON polls.id = questions.poll_id
     JOIN answer_choices
        ON answer_choices.question_id = questions.id
         JOIN responses
          ON responses.answer_choice_id = answer_choices.id
    WHERE
      responses.user_id = 1
    -- GROUP BY
--       polls.id
--     HAVING
--


  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.4ms)[0m   SELECT
 polls.id, COUNT(responses.id)
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1
 -- GROUP BY
-- polls.id
-- HAVING
--


  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.3ms)[0m   SELECT
 polls.id, COUNT(responses.id)
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id
-- HAVING
--


  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.3ms)[0m   SELECT
 polls.id, COUNT(responses.id)
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id
 HAVING
 COUNT(responses.id) = 2


  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.2ms)[0m   SELECT
 polls.id, COUNT(responses.id)
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id
 HAVING
 COUNT(responses.id) = 2


  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT "users".* FROM "users"
  [1m[36mResponse Load (0.3ms)[0m  [1mSELECT "responses".* FROM "responses" WHERE "responses"."user_id" = ?[0m  [["user_id", 3]]
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users"
  [1m[36mResponse Load (0.2ms)[0m  [1mSELECT "responses".* FROM "responses" WHERE "responses"."user_id" = ?[0m  [["user_id", 3]]
  [1m[35mUser Load (0.3ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.3ms)[0m  [1m SELECT
 polls.id, COUNT(responses.id)
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id
 HAVING
 COUNT(responses.id) = 1

[0m
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.3ms)[0m  [1m SELECT
 polls.id, COUNT(responses.id)
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id
 HAVING
 COUNT(responses.id) = (
 SELECT
 COUNT(questions.id)
 FROM
 questions
 GROUP BY
 questions.poll_id
 )

[0m
  [1m[35mUser Load (0.6ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.2ms)[0m  [1m SELECT
 polls.id
 FROM
 (SELECT
 polls.id, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN
 (
 SELECT
 questions.poll_id, COUNT(questions.id) AS q_num
 FROM
 questions
 GROUP BY
 questions.poll_id
 ) AS b ON questions.poll_id = polls.id
 WHERE
 a.res_num = b.q_num

[0m
SQLite3::SQLException: no such column: polls.id:     SELECT
    polls.id
    FROM
    (SELECT
      polls.id, COUNT(responses.id) AS res_num
    FROM
    polls JOIN questions
      ON polls.id = questions.poll_id
     JOIN answer_choices
        ON answer_choices.question_id = questions.id
         JOIN responses
          ON responses.answer_choice_id = answer_choices.id
    WHERE
      responses.user_id = 3
    GROUP BY
      polls.id) AS a
    JOIN
       (
        SELECT
          questions.poll_id, COUNT(questions.id) AS q_num
        FROM
          questions
        GROUP BY
          questions.poll_id
      ) AS b ON questions.poll_id = polls.id
      WHERE
      a.res_num = b.q_num


  [1m[35mUser Load (0.6ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.2ms)[0m  [1m SELECT
 polls.id
 FROM
 (SELECT
 polls.id, COUNT(responses.id) AS res_num
 FROM
 polls c JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN
 (
 SELECT
 questions.poll_id, COUNT(questions.id) AS q_num
 FROM
 questions
 GROUP BY
 questions.poll_id
 ) AS b ON questions.poll_id = c.id
 WHERE
 a.res_num = b.q_num

[0m
SQLite3::SQLException: no such column: polls.id:     SELECT
    polls.id
    FROM
    (SELECT
      polls.id, COUNT(responses.id) AS res_num
    FROM
    polls c JOIN questions
      ON polls.id = questions.poll_id
     JOIN answer_choices
        ON answer_choices.question_id = questions.id
         JOIN responses
          ON responses.answer_choice_id = answer_choices.id
    WHERE
      responses.user_id = 3
    GROUP BY
      polls.id) AS a
    JOIN
       (
        SELECT
          questions.poll_id, COUNT(questions.id) AS q_num
        FROM
          questions
        GROUP BY
          questions.poll_id
      ) AS b ON questions.poll_id = c.id
      WHERE
      a.res_num = b.q_num


  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.2ms)[0m  [1m SELECT
 a.a_id
 FROM
 (SELECT
 polls.id a_id, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN
 (
 SELECT
 questions.poll_id, COUNT(questions.id) AS q_num
 FROM
 questions
 GROUP BY
 questions.poll_id
 ) AS b ON questions.poll_id = polls.id
 WHERE
 a.res_num = b.q_num

[0m
SQLite3::SQLException: no such column: questions.poll_id:     SELECT
    a.a_id
    FROM
    (SELECT
      polls.id a_id, COUNT(responses.id) AS res_num
    FROM
    polls JOIN questions
      ON polls.id = questions.poll_id
     JOIN answer_choices
        ON answer_choices.question_id = questions.id
         JOIN responses
          ON responses.answer_choice_id = answer_choices.id
    WHERE
      responses.user_id = 3
    GROUP BY
      polls.id) AS a
    JOIN
       (
        SELECT
          questions.poll_id, COUNT(questions.id) AS q_num
        FROM
          questions
        GROUP BY
          questions.poll_id
      ) AS b ON questions.poll_id = polls.id
      WHERE
      a.res_num = b.q_num


  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.3ms)[0m  [1m SELECT
 a.a_id
 FROM
 (SELECT
 polls.id a_id, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN
 (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id
 ) AS b ON questions.poll_id = polls.id
 WHERE
 a.res_num = b.q_num

[0m
SQLite3::SQLException: no such column: questions.poll_id:     SELECT
    a.a_id
    FROM
    (SELECT
      polls.id a_id, COUNT(responses.id) AS res_num
    FROM
    polls JOIN questions
      ON polls.id = questions.poll_id
     JOIN answer_choices
        ON answer_choices.question_id = questions.id
         JOIN responses
          ON responses.answer_choice_id = answer_choices.id
    WHERE
      responses.user_id = 3
    GROUP BY
      polls.id) AS a
    JOIN
       (
        SELECT
          poll_id, COUNT(id) AS q_num
        FROM
          questions
        GROUP BY
          poll_id
      ) AS b ON questions.poll_id = polls.id
      WHERE
      a.res_num = b.q_num


  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.5ms)[0m  [1m SELECT
 a.a_id
 FROM
 (SELECT
 polls.id a_id, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN
 (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id
 ) AS b ON b.poll_id = a.a_id
 WHERE
 a.res_num = b.q_num

[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.4ms)[0m  [1m SELECT
 a.a_id
 FROM
 (SELECT
 polls.id a_id, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 2
 GROUP BY
 polls.id) AS a
 JOIN
 (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id
 ) AS b ON b.poll_id = a.a_id
 WHERE
 a.res_num = b.q_num

[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.4ms)[0m  [1m SELECT
 a.a_id
 FROM
 (SELECT
 polls.id a_id, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 JOIN
 (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id
 ) AS b ON b.poll_id = a.a_id
 WHERE
 a.res_num = b.q_num

[0m
  [1m[35mUser Load (0.2ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mResponse Load (0.2ms)[0m  [1mSELECT "responses".* FROM "responses" WHERE "responses"."user_id" = ?[0m  [["user_id", 1]]
  [1m[35mUser Load (0.3ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.4ms)[0m  [1m SELECT
 a.a_id
 FROM
 (SELECT
 polls.id a_id, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN
 (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id
 ) AS b ON b.poll_id = a.a_id
 WHERE
 a.res_num = b.q_num

[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.4ms)[0m  [1m SELECT
 a.a_id
 FROM
 (SELECT
 polls.id a_id, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN
 (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id
 ) AS b ON b.poll_id = a.a_id
 WHERE
 a.res_num = b.q_num

[0m
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.1ms)[0m  [1m SELECT
 a.a_id
 FROM
 (SELECT
 polls.* a_id, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN
 (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id
 ) AS b ON b.poll_id = a.a_id
 WHERE
 a.res_num = b.q_num

[0m
SQLite3::SQLException: near "a_id": syntax error:     SELECT
    a.a_id
    FROM
    (SELECT
      polls.* a_id, COUNT(responses.id) AS res_num
    FROM
    polls JOIN questions
      ON polls.id = questions.poll_id
     JOIN answer_choices
        ON answer_choices.question_id = questions.id
         JOIN responses
          ON responses.answer_choice_id = answer_choices.id
    WHERE
      responses.user_id = 3
    GROUP BY
      polls.id) AS a
    JOIN
       (
        SELECT
          poll_id, COUNT(id) AS q_num
        FROM
          questions
        GROUP BY
          poll_id
      ) AS b ON b.poll_id = a.a_id
      WHERE
      a.res_num = b.q_num


  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.5ms)[0m  [1m SELECT
 a.a_id
 FROM
 (SELECT
 polls.id a_id, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN
 (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id
 ) AS b ON b.poll_id = a.a_id
 WHERE
 a.res_num = b.q_num

[0m
  [1m[35mUser Load (0.6ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.5ms)[0m  [1m SELECT
 a.*
 FROM
 (SELECT
 polls.id a_id, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN
 (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id
 ) AS b ON b.poll_id = a.a_id
 WHERE
 a.res_num = b.q_num

[0m
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.1ms)[0m  [1m SELECT
 a.*
 FROM
 (SELECT
 polls.* a_id, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN
 (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id
 ) AS b ON b.poll_id = a.a_id
 WHERE
 a.res_num = b.q_num

[0m
SQLite3::SQLException: near "a_id": syntax error:     SELECT
    a.*
    FROM
    (SELECT
      polls.* a_id, COUNT(responses.id) AS res_num
    FROM
    polls JOIN questions
      ON polls.id = questions.poll_id
     JOIN answer_choices
        ON answer_choices.question_id = questions.id
         JOIN responses
          ON responses.answer_choice_id = answer_choices.id
    WHERE
      responses.user_id = 3
    GROUP BY
      polls.id) AS a
    JOIN
       (
        SELECT
          poll_id, COUNT(id) AS q_num
        FROM
          questions
        GROUP BY
          poll_id
      ) AS b ON b.poll_id = a.a_id
      WHERE
      a.res_num = b.q_num


  [1m[35mUser Load (0.6ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.2ms)[0m  [1m SELECT
 a.*
 FROM
 (SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN
 (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id
 ) AS b ON b.poll_id = a.a_id
 WHERE
 a.res_num = b.q_num

[0m
SQLite3::SQLException: no such column: a.a_id:     SELECT
    a.*
    FROM
    (SELECT
      polls.*, COUNT(responses.id) AS res_num
    FROM
    polls JOIN questions
      ON polls.id = questions.poll_id
     JOIN answer_choices
        ON answer_choices.question_id = questions.id
         JOIN responses
          ON responses.answer_choice_id = answer_choices.id
    WHERE
      responses.user_id = 3
    GROUP BY
      polls.id) AS a
    JOIN
       (
        SELECT
          poll_id, COUNT(id) AS q_num
        FROM
          questions
        GROUP BY
          poll_id
      ) AS b ON b.poll_id = a.a_id
      WHERE
      a.res_num = b.q_num


  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.5ms)[0m  [1m SELECT
 a.*
 FROM
 (SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN
 (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id
 ) AS b ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num

[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.4ms)[0m  [1m SELECT
 a.*
 FROM
 (SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 JOIN
 (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id
 ) AS b ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num

[0m
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.5ms)[0m  [1m SELECT
 a.id
 FROM
 (SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 JOIN
 (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id
 ) AS b ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num

[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.4ms)[0m  [1m SELECT
 a.id
 FROM
 (SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 JOIN
 (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id
 ) AS b ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num

[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.4ms)[0m  [1m SELECT
 a.id
 FROM
 (SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN
 (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id
 ) AS b ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num

[0m
  [1m[35mUser Load (0.6ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.2ms)[0m  [1m SELECT
 a.id
 FROM
 (SELECT
 polls.id, COUNT(responses.id)
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN
 (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id
 ) AS b ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num

[0m
SQLite3::SQLException: no such column: a.res_num:     SELECT
    a.id
    FROM
    (SELECT
      polls.id, COUNT(responses.id)
    FROM
    polls JOIN questions
      ON polls.id = questions.poll_id
     JOIN answer_choices
        ON answer_choices.question_id = questions.id
         JOIN responses
          ON responses.answer_choice_id = answer_choices.id
    WHERE
      responses.user_id = 3
    GROUP BY
      polls.id) AS a
    JOIN
       (
        SELECT
          poll_id, COUNT(id) AS q_num
        FROM
          questions
        GROUP BY
          poll_id
      ) AS b ON b.poll_id = a.id
      WHERE
      a.res_num = b.q_num


  [1m[35mUser Load (0.6ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.2ms)[0m  [1m SELECT
 a.id
 FROM
 (SELECT
 polls.*, COUNT(responses.id)
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN
 (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id
 ) AS b ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num

[0m
SQLite3::SQLException: no such column: a.res_num:     SELECT
    a.id
    FROM
    (SELECT
      polls.*, COUNT(responses.id)
    FROM
    polls JOIN questions
      ON polls.id = questions.poll_id
     JOIN answer_choices
        ON answer_choices.question_id = questions.id
         JOIN responses
          ON responses.answer_choice_id = answer_choices.id
    WHERE
      responses.user_id = 3
    GROUP BY
      polls.id) AS a
    JOIN
       (
        SELECT
          poll_id, COUNT(id) AS q_num
        FROM
          questions
        GROUP BY
          poll_id
      ) AS b ON b.poll_id = a.id
      WHERE
      a.res_num = b.q_num


  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.5ms)[0m  [1m SELECT
 a.id
 FROM
 (SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON answer_choices.question_id = questions.id
 JOIN responses
 ON responses.answer_choice_id = answer_choices.id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN
 (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id
 ) AS b ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num

[0m
  [1m[35mUser Load (0.6ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.5ms)[0m  [1m SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num

[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.4ms)[0m  [1m SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num

[0m
  [1m[35mUser Load (0.6ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.5ms)[0m  [1m SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num < b.q_num

[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.4ms)[0m  [1m SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num < b.q_num

[0m
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.4ms)[0m  [1m SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls OUTER LEFT JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num < b.q_num

[0m
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.7ms)[0m  [1m SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls OUTER LEFT JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num < b.q_num

[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.4ms)[0m  [1m SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls OUTER LEFT JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num < b.q_num

[0m
  [1m[35mUser Load (0.6ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.5ms)[0m  [1m SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 OUTER LEFT JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num < b.q_num

[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.4ms)[0m  [1m SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 OUTER LEFT JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num < b.q_num

[0m
  [1m[35mPoll Load (0.2ms)[0m  SELECT "polls".* FROM "polls"
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.5ms)[0m   SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num < b.q_num


  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.4ms)[0m   SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num < b.q_num


  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.5ms)[0m   SELECT
 a.id
 FROM (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 OUTER LEFT JOIN (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 ON b.poll_id = a.id
 WHERE
 a.res_num < b.q_num


  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.5ms)[0m   SELECT
 a.id
 FROM (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 OUTER LEFT JOIN (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 ON b.poll_id = a.id
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.4ms)[0m   SELECT
 a.id
 FROM (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 OUTER LEFT JOIN (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 ON b.poll_id = a.id
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


  [1m[36mUser Load (0.6ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.2ms)[0m   SELECT
 b.id
 FROM (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 OUTER LEFT JOIN (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 ON b.poll_id = a.id
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


SQLite3::SQLException: no such column: b.id:     SELECT
      b.id
    FROM (
          SELECT
            poll_id, COUNT(id) AS q_num
          FROM
            questions
          GROUP BY
            poll_id) AS b
        OUTER LEFT JOIN (
      SELECT
        polls.*, COUNT(responses.id) AS res_num
      FROM
        polls JOIN questions
          ON polls.id = questions.poll_id
           JOIN answer_choices
             ON questions.id = answer_choices.question_id
               JOIN responses
                 ON answer_choices.id = responses.answer_choice_id
      WHERE
        responses.user_id = 1
      GROUP BY
        polls.id) AS a
        ON b.poll_id = a.id
      WHERE
      a.res_num < b.q_num OR
      a.res_num IS NULL


  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.2ms)[0m   SELECT
 b.id
 FROM (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 OUTER LEFT JOIN (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 ON b.poll_id = a.id
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


SQLite3::SQLException: no such column: b.id:     SELECT
      b.id
    FROM (
          SELECT
            poll_id, COUNT(id) AS q_num
          FROM
            questions
          GROUP BY
            poll_id) AS b
        OUTER LEFT JOIN (
      SELECT
        polls.*, COUNT(responses.id) AS res_num
      FROM
        polls JOIN questions
          ON polls.id = questions.poll_id
           JOIN answer_choices
             ON questions.id = answer_choices.question_id
               JOIN responses
                 ON answer_choices.id = responses.answer_choice_id
      WHERE
        responses.user_id = 3
      GROUP BY
        polls.id) AS a
        ON b.poll_id = a.id
      WHERE
      a.res_num < b.q_num OR
      a.res_num IS NULL


  [1m[36mUser Load (0.6ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.5ms)[0m   SELECT
 b.poll_id
 FROM (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 OUTER LEFT JOIN (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 ON b.poll_id = a.id
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.4ms)[0m   SELECT
 b.poll_id
 FROM (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 OUTER LEFT JOIN (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 ON b.poll_id = a.id
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.2ms)[0m   SELECT
 b.poll
 FROM (
 SELECT
 poll_id AS poll, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 OUTER LEFT JOIN (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 ON b.poll_id = a.id
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


SQLite3::SQLException: no such column: b.poll_id:     SELECT
      b.poll
    FROM (
          SELECT
            poll_id AS poll, COUNT(id) AS q_num
          FROM
            questions
          GROUP BY
            poll_id) AS b
        OUTER LEFT JOIN (
      SELECT
        polls.*, COUNT(responses.id) AS res_num
      FROM
        polls JOIN questions
          ON polls.id = questions.poll_id
           JOIN answer_choices
             ON questions.id = answer_choices.question_id
               JOIN responses
                 ON answer_choices.id = responses.answer_choice_id
      WHERE
        responses.user_id = 1
      GROUP BY
        polls.id) AS a
        ON b.poll_id = a.id
      WHERE
      a.res_num < b.q_num OR
      a.res_num IS NULL


  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.5ms)[0m   SELECT
 b.poll
 FROM (
 SELECT
 poll_id AS poll, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 OUTER LEFT JOIN (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 ON b.poll = a.id
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.5ms)[0m   SELECT
 b.poll_id
 FROM (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 OUTER LEFT JOIN (
 SELECT
 polls.id AS poll, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 ON b.poll_id = a.poll
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.4ms)[0m   SELECT
 b.poll_id
 FROM (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 OUTER LEFT JOIN (
 SELECT
 polls.id AS poll, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 ON b.poll_id = a.poll
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.4ms)[0m   SELECT
 b.poll_id
 FROM (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 OUTER LEFT JOIN (
 SELECT
 polls.id AS poll, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 ON b.poll_id = a.poll
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.6ms)[0m   SELECT
 b.poll_id
 FROM (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 LEFT JOIN (
 SELECT
 polls.id AS poll, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 ON b.poll_id = a.poll
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.4ms)[0m   SELECT
 b.poll_id
 FROM (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 LEFT JOIN (
 SELECT
 polls.id AS poll, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 ON b.poll_id = a.poll
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.5ms)[0m   SELECT
 b.poll_id
 FROM (
 SELECT
 *, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 LEFT JOIN (
 SELECT
 polls.id AS poll, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 ON b.poll_id = a.poll
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


  [1m[36mUser Load (0.6ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.5ms)[0m   SELECT
 b.poll_id
 FROM (
 SELECT
 *, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 LEFT JOIN (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 ON b.poll_id = a.id
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


  [1m[36mUser Load (0.6ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.5ms)[0m   SELECT
 b.poll_id
 FROM (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 LEFT JOIN (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 ON a.id = b.poll_id
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.5ms)[0m   SELECT
 a.id
 FROM (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 LEFT JOIN (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 ON a.id = b.poll_id
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


  [1m[36mUser Load (0.6ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.5ms)[0m   SELECT
 a.id
 FROM (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 OUTER LEFT JOIN (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 ON a.id = b.poll_id
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


  [1m[36mUser Load (0.6ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.2ms)[0m   SELECT
 a.id
 FROM (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 OUTER LEFT JOIN (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 ON b.id = a.question_id
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


SQLite3::SQLException: no such column: b.id:     SELECT
      a.id
    FROM (
          SELECT
            poll_id, COUNT(id) AS q_num
          FROM
            questions
          GROUP BY
            poll_id) AS b
        OUTER LEFT JOIN (
      SELECT
        polls.*, COUNT(responses.id) AS res_num
      FROM
        polls JOIN questions
          ON polls.id = questions.poll_id
           JOIN answer_choices
             ON questions.id = answer_choices.question_id
               JOIN responses
                 ON answer_choices.id = responses.answer_choice_id
      WHERE
        responses.user_id = 3
      GROUP BY
        polls.id) AS a
        ON b.id = a.question_id
      WHERE
      a.res_num < b.q_num OR
      a.res_num IS NULL


  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.2ms)[0m   SELECT
 a.id
 FROM (
 SELECT
 id, poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 OUTER LEFT JOIN (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 ON b.id = a.question_id
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


SQLite3::SQLException: no such column: a.question_id:     SELECT
      a.id
    FROM (
          SELECT
            id, poll_id, COUNT(id) AS q_num
          FROM
            questions
          GROUP BY
            poll_id) AS b
        OUTER LEFT JOIN (
      SELECT
        polls.*, COUNT(responses.id) AS res_num
      FROM
        polls JOIN questions
          ON polls.id = questions.poll_id
           JOIN answer_choices
             ON questions.id = answer_choices.question_id
               JOIN responses
                 ON answer_choices.id = responses.answer_choice_id
      WHERE
        responses.user_id = 3
      GROUP BY
        polls.id) AS a
        ON b.id = a.question_id
      WHERE
      a.res_num < b.q_num OR
      a.res_num IS NULL


  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.2ms)[0m   SELECT
 a.id
 FROM (
 SELECT
 id, poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 OUTER LEFT JOIN (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions AS c
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 ON b.id = c.id
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


SQLite3::SQLException: no such column: questions.poll_id:     SELECT
      a.id
    FROM (
          SELECT
            id, poll_id, COUNT(id) AS q_num
          FROM
            questions
          GROUP BY
            poll_id) AS b
        OUTER LEFT JOIN (
      SELECT
        polls.*, COUNT(responses.id) AS res_num
      FROM
        polls JOIN questions AS c
          ON polls.id = questions.poll_id
           JOIN answer_choices
             ON questions.id = answer_choices.question_id
               JOIN responses
                 ON answer_choices.id = responses.answer_choice_id
      WHERE
        responses.user_id = 3
      GROUP BY
        polls.id) AS a
        ON b.id = c.id
      WHERE
      a.res_num < b.q_num OR
      a.res_num IS NULL


  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.2ms)[0m   SELECT
 a.id
 FROM (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 OUTER LEFT JOIN (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 ON b.id = a.question_id
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


SQLite3::SQLException: no such column: b.id:     SELECT
      a.id
    FROM (
          SELECT
            poll_id, COUNT(id) AS q_num
          FROM
            questions
          GROUP BY
            poll_id) AS b
        OUTER LEFT JOIN (
      SELECT
        polls.*, COUNT(responses.id) AS res_num
      FROM
        polls JOIN questions
          ON polls.id = questions.poll_id
           JOIN answer_choices
             ON questions.id = answer_choices.question_id
               JOIN responses
                 ON answer_choices.id = responses.answer_choice_id
      WHERE
        responses.user_id = 3
      GROUP BY
        polls.id) AS a
        ON b.id = a.question_id
      WHERE
      a.res_num < b.q_num OR
      a.res_num IS NULL


  [1m[36mUser Load (0.6ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.5ms)[0m   SELECT
 a.id
 FROM (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 LEFT OUTER JOIN (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 ON a.id = b.poll_id
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.4ms)[0m   SELECT
 a.id
 FROM (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 LEFT OUTER JOIN (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 ON a.id = b.poll_id
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.4ms)[0m   SELECT
 a.id
 FROM (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 LEFT OUTER JOIN (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 ON a.id = b.poll_id
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


  [1m[36mUser Load (0.6ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.5ms)[0m   SELECT
 b.poll_id
 FROM (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 LEFT OUTER JOIN (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 ON a.id = b.poll_id
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.4ms)[0m   SELECT
 b.poll_id
 FROM (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 LEFT OUTER JOIN (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 ON a.id = b.poll_id
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.5ms)[0m   SELECT
 b.poll_id
 FROM (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 JOIN (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 ON a.id = b.poll_id
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.4ms)[0m   SELECT
 b.poll_id
 FROM (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 JOIN (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 ON a.id = b.poll_id
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


  [1m[36mUser Load (2.2ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.5ms)[0m   SELECT
 b.*
 FROM (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 JOIN (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 ON a.id = b.poll_id
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.4ms)[0m   SELECT
 b.*
 FROM (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 JOIN (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 ON a.id = b.poll_id
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.5ms)[0m   SELECT
 b.poll
 FROM (
 SELECT
 polls.id AS poll, COUNT(questions.id) AS q_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 GROUP BY
 poll_id) AS b
 JOIN (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 ON a.id = b.poll
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.4ms)[0m   SELECT
 b.poll
 FROM (
 SELECT
 polls.id AS poll, COUNT(questions.id) AS q_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 GROUP BY
 poll_id) AS b
 JOIN (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 ON a.id = b.poll
 WHERE
 a.res_num < b.q_num OR
 a.res_num IS NULL


  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.5ms)[0m   SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num


  [1m[36mPoll Load (0.3ms)[0m  [1m SELECT
 id
 FROM
 polls
 WHERE
 id NOT IN [#<Poll id: 1>, #<Poll id: 2>]






 -- SELECT
 -- b.poll
 -- FROM (
 -- SELECT
 -- polls.id AS poll, COUNT(questions.id) AS q_num
 -- FROM
 -- polls JOIN questions
 -- ON polls.id = questions.poll_id
 -- GROUP BY
 -- questions.poll_id) AS b
 -- JOIN (
 -- SELECT
 -- polls.*, COUNT(responses.id) AS res_num
 -- FROM
 -- polls JOIN questions
 -- ON polls.id = questions.poll_id
 -- JOIN answer_choices
 -- ON questions.id = answer_choices.question_id
 -- JOIN responses
 -- ON answer_choices.id = responses.answer_choice_id
 -- WHERE
 -- responses.user_id = 0
 -- GROUP BY
 -- polls.id) AS a
 -- ON a.id = b.poll
 -- WHERE
 -- a.res_num < b.q_num OR
 -- a.res_num IS NULL

[0m
SQLite3::SQLException: no such table: #<Poll id: 1>, #<Poll id: 2>:     SELECT
    id
    FROM
    polls
    WHERE
    id NOT IN [#<Poll id: 1>, #<Poll id: 2>]






    -- SELECT
    -- b.poll
    -- FROM (
    --       SELECT
    --         polls.id AS poll, COUNT(questions.id) AS q_num
    --       FROM
    --         polls JOIN questions
    --           ON polls.id = questions.poll_id
    --       GROUP BY
    --         questions.poll_id) AS b
    --     JOIN (
    --   SELECT
    --     polls.*, COUNT(responses.id) AS res_num
    --   FROM
    --     polls JOIN questions
    --       ON polls.id = questions.poll_id
    --        JOIN answer_choices
    --          ON questions.id = answer_choices.question_id
    --            JOIN responses
    --              ON answer_choices.id = responses.answer_choice_id
    --   WHERE
    --     responses.user_id = 0
    --   GROUP BY
    --     polls.id) AS a
    --     ON a.id = b.poll
    --   WHERE
    --   a.res_num < b.q_num OR
    --   a.res_num IS NULL


  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.5ms)[0m  [1m SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num

[0m
  [1m[35mPoll Load (0.2ms)[0m   SELECT
 id
 FROM
 polls
 WHERE
 id NOT IN [1, 2]






 -- SELECT
 -- b.poll
 -- FROM (
 -- SELECT
 -- polls.id AS poll, COUNT(questions.id) AS q_num
 -- FROM
 -- polls JOIN questions
 -- ON polls.id = questions.poll_id
 -- GROUP BY
 -- questions.poll_id) AS b
 -- JOIN (
 -- SELECT
 -- polls.*, COUNT(responses.id) AS res_num
 -- FROM
 -- polls JOIN questions
 -- ON polls.id = questions.poll_id
 -- JOIN answer_choices
 -- ON questions.id = answer_choices.question_id
 -- JOIN responses
 -- ON answer_choices.id = responses.answer_choice_id
 -- WHERE
 -- responses.user_id = 0
 -- GROUP BY
 -- polls.id) AS a
 -- ON a.id = b.poll
 -- WHERE
 -- a.res_num < b.q_num OR
 -- a.res_num IS NULL


SQLite3::SQLException: no such table: 1, 2:     SELECT
    id
    FROM
    polls
    WHERE
  id NOT IN [1, 2]






    -- SELECT
    -- b.poll
    -- FROM (
    --       SELECT
    --         polls.id AS poll, COUNT(questions.id) AS q_num
    --       FROM
    --         polls JOIN questions
    --           ON polls.id = questions.poll_id
    --       GROUP BY
    --         questions.poll_id) AS b
    --     JOIN (
    --   SELECT
    --     polls.*, COUNT(responses.id) AS res_num
    --   FROM
    --     polls JOIN questions
    --       ON polls.id = questions.poll_id
    --        JOIN answer_choices
    --          ON questions.id = answer_choices.question_id
    --            JOIN responses
    --              ON answer_choices.id = responses.answer_choice_id
    --   WHERE
    --     responses.user_id = 0
    --   GROUP BY
    --     polls.id) AS a
    --     ON a.id = b.poll
    --   WHERE
    --   a.res_num < b.q_num OR
    --   a.res_num IS NULL


  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.5ms)[0m   SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num


  [1m[36mUser Load (0.6ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.5ms)[0m   SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num


  [1m[36mPoll Load (0.1ms)[0m  [1mSELECT "polls".* FROM "polls" WHERE (id NOT IN 1,2)[0m
SQLite3::SQLException: near "1": syntax error: SELECT "polls".* FROM "polls"  WHERE (id NOT IN 1,2)
  [1m[35mUser Load (0.6ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.5ms)[0m  [1m SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num

[0m
  [1m[35mPoll Load (0.2ms)[0m  SELECT "polls".* FROM "polls" WHERE (id NOT IN [1,2])
SQLite3::SQLException: no such table: 1,2: SELECT "polls".* FROM "polls"  WHERE (id NOT IN [1,2])
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.5ms)[0m   SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num


  [1m[36mPoll Load (0.2ms)[0m  [1mSELECT "polls".* FROM "polls" WHERE (id NOT IN (1,2))[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.4ms)[0m  [1m SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num

[0m
  [1m[35mPoll Load (0.2ms)[0m  SELECT "polls".* FROM "polls" WHERE (id NOT IN (1))
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.6ms)[0m   SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num

  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.4ms)[0m   SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num

  [1m[36mPoll Load (0.2ms)[0m  [1mSELECT "polls".* FROM "polls" WHERE (id NOT IN (1,2))[0m
  [1m[35mUser Load (0.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPoll Load (0.5ms)[0m  [1m SELECT
 a.*
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num
[0m
  [1m[35mPoll Load (0.2ms)[0m  SELECT "polls".* FROM "polls" WHERE (id NOT IN (1,2))
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.4ms)[0m   SELECT
 a.*
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num

  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.5ms)[0m   SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num

  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPoll Load (0.5ms)[0m   SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num

  [1m[36mPoll Load (0.2ms)[0m  [1mSELECT id FROM "polls" WHERE (id NOT IN (1,2))[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.4ms)[0m  [1m SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num
[0m
  [1m[35mUser Load (0.3ms)[0m  SELECT "users".* FROM "users"
  [1m[36mPoll Load (0.5ms)[0m  [1m SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num
[0m
  [1m[35mPoll Load (0.2ms)[0m  SELECT id FROM "polls" WHERE (id NOT IN (1))
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.4ms)[0m   SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num

  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.5ms)[0m   SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num

  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.5ms)[0m   SELECT
 id
 FROM polls
 WHERE id NOT IN (
 SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num)


  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.5ms)[0m   SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num

  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.5ms)[0m   SELECT
 id
 FROM
 polls
 WHERE
 id NOT IN (
 SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 3
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num)

  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.4ms)[0m   SELECT
 id
 FROM
 polls
 WHERE
 id NOT IN (
 SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num)

  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users"[0m
  [1m[35mPoll Load (0.4ms)[0m   SELECT
 a.id
 FROM (
 SELECT
 polls.*, COUNT(responses.id) AS res_num
 FROM
 polls JOIN questions
 ON polls.id = questions.poll_id
 JOIN answer_choices
 ON questions.id = answer_choices.question_id
 JOIN responses
 ON answer_choices.id = responses.answer_choice_id
 WHERE
 responses.user_id = 1
 GROUP BY
 polls.id) AS a
 JOIN (
 SELECT
 poll_id, COUNT(id) AS q_num
 FROM
 questions
 GROUP BY
 poll_id) AS b
 ON b.poll_id = a.id
 WHERE
 a.res_num = b.q_num

